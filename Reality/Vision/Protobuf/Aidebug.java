// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aidebug.proto

public final class Aidebug {
  private Aidebug() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Data_Type
      implements com.google.protobuf.ProtocolMessageEnum {
    imm_bool(0, 0),
    imm_short(1, 1),
    imm_int(2, 2),
    imm_float(3, 3),
    imm_double(4, 4),
    imm_vec2(5, 5),
    imm_vec3(6, 6),
    imm_str(7, 7),
    ;
    
    public static final int imm_bool_VALUE = 0;
    public static final int imm_short_VALUE = 1;
    public static final int imm_int_VALUE = 2;
    public static final int imm_float_VALUE = 3;
    public static final int imm_double_VALUE = 4;
    public static final int imm_vec2_VALUE = 5;
    public static final int imm_vec3_VALUE = 6;
    public static final int imm_str_VALUE = 7;
    
    
    public final int getNumber() { return value; }
    
    public static Data_Type valueOf(int value) {
      switch (value) {
        case 0: return imm_bool;
        case 1: return imm_short;
        case 2: return imm_int;
        case 3: return imm_float;
        case 4: return imm_double;
        case 5: return imm_vec2;
        case 6: return imm_vec3;
        case 7: return imm_str;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Data_Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Data_Type>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Data_Type>() {
            public Data_Type findValueByNumber(int number) {
              return Data_Type.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Aidebug.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Data_Type[] VALUES = {
      imm_bool, imm_short, imm_int, imm_float, imm_double, imm_vec2, imm_vec3, imm_str, 
    };
    
    public static Data_Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Data_Type(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:Data_Type)
  }
  
  public interface colorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required float r = 1;
    boolean hasR();
    float getR();
    
    // required float g = 2;
    boolean hasG();
    float getG();
    
    // required float b = 3;
    boolean hasB();
    float getB();
  }
  public static final class color extends
      com.google.protobuf.GeneratedMessage
      implements colorOrBuilder {
    // Use color.newBuilder() to construct.
    private color(Builder builder) {
      super(builder);
    }
    private color(boolean noInit) {}
    
    private static final color defaultInstance;
    public static color getDefaultInstance() {
      return defaultInstance;
    }
    
    public color getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_color_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_color_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required float r = 1;
    public static final int R_FIELD_NUMBER = 1;
    private float r_;
    public boolean hasR() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getR() {
      return r_;
    }
    
    // required float g = 2;
    public static final int G_FIELD_NUMBER = 2;
    private float g_;
    public boolean hasG() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getG() {
      return g_;
    }
    
    // required float b = 3;
    public static final int B_FIELD_NUMBER = 3;
    private float b_;
    public boolean hasB() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getB() {
      return b_;
    }
    
    private void initFields() {
      r_ = 0F;
      g_ = 0F;
      b_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasG()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasB()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, g_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, b_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, r_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, g_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, b_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.color parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.color parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.color parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.color parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.color parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.color parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.color parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.color parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.color parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.color parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.color prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.colorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_color_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_color_fieldAccessorTable;
      }
      
      // Construct using Aidebug.color.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        r_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        g_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.color.getDescriptor();
      }
      
      public Aidebug.color getDefaultInstanceForType() {
        return Aidebug.color.getDefaultInstance();
      }
      
      public Aidebug.color build() {
        Aidebug.color result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.color buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.color result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.color buildPartial() {
        Aidebug.color result = new Aidebug.color(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.r_ = r_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.g_ = g_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.b_ = b_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.color) {
          return mergeFrom((Aidebug.color)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.color other) {
        if (other == Aidebug.color.getDefaultInstance()) return this;
        if (other.hasR()) {
          setR(other.getR());
        }
        if (other.hasG()) {
          setG(other.getG());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasR()) {
          
          return false;
        }
        if (!hasG()) {
          
          return false;
        }
        if (!hasB()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              r_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              g_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              b_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float r = 1;
      private float r_ ;
      public boolean hasR() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getR() {
        return r_;
      }
      public Builder setR(float value) {
        bitField0_ |= 0x00000001;
        r_ = value;
        onChanged();
        return this;
      }
      public Builder clearR() {
        bitField0_ = (bitField0_ & ~0x00000001);
        r_ = 0F;
        onChanged();
        return this;
      }
      
      // required float g = 2;
      private float g_ ;
      public boolean hasG() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getG() {
        return g_;
      }
      public Builder setG(float value) {
        bitField0_ |= 0x00000002;
        g_ = value;
        onChanged();
        return this;
      }
      public Builder clearG() {
        bitField0_ = (bitField0_ & ~0x00000002);
        g_ = 0F;
        onChanged();
        return this;
      }
      
      // required float b = 3;
      private float b_ ;
      public boolean hasB() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getB() {
        return b_;
      }
      public Builder setB(float value) {
        bitField0_ |= 0x00000004;
        b_ = value;
        onChanged();
        return this;
      }
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000004);
        b_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:color)
    }
    
    static {
      defaultInstance = new color(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:color)
  }
  
  public interface Debug_PointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required float x = 1;
    boolean hasX();
    float getX();
    
    // required float y = 2;
    boolean hasY();
    float getY();
    
    // optional .color col = 3;
    boolean hasCol();
    Aidebug.color getCol();
    Aidebug.colorOrBuilder getColOrBuilder();
  }
  public static final class Debug_Point extends
      com.google.protobuf.GeneratedMessage
      implements Debug_PointOrBuilder {
    // Use Debug_Point.newBuilder() to construct.
    private Debug_Point(Builder builder) {
      super(builder);
    }
    private Debug_Point(boolean noInit) {}
    
    private static final Debug_Point defaultInstance;
    public static Debug_Point getDefaultInstance() {
      return defaultInstance;
    }
    
    public Debug_Point getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_Debug_Point_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_Debug_Point_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getX() {
      return x_;
    }
    
    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getY() {
      return y_;
    }
    
    // optional .color col = 3;
    public static final int COL_FIELD_NUMBER = 3;
    private Aidebug.color col_;
    public boolean hasCol() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public Aidebug.color getCol() {
      return col_;
    }
    public Aidebug.colorOrBuilder getColOrBuilder() {
      return col_;
    }
    
    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      col_ = Aidebug.color.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCol()) {
        if (!getCol().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, col_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, col_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.Debug_Point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.Debug_Point prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.Debug_PointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_Debug_Point_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_Debug_Point_fieldAccessorTable;
      }
      
      // Construct using Aidebug.Debug_Point.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getColFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (colBuilder_ == null) {
          col_ = Aidebug.color.getDefaultInstance();
        } else {
          colBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.Debug_Point.getDescriptor();
      }
      
      public Aidebug.Debug_Point getDefaultInstanceForType() {
        return Aidebug.Debug_Point.getDefaultInstance();
      }
      
      public Aidebug.Debug_Point build() {
        Aidebug.Debug_Point result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.Debug_Point buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.Debug_Point result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.Debug_Point buildPartial() {
        Aidebug.Debug_Point result = new Aidebug.Debug_Point(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (colBuilder_ == null) {
          result.col_ = col_;
        } else {
          result.col_ = colBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.Debug_Point) {
          return mergeFrom((Aidebug.Debug_Point)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.Debug_Point other) {
        if (other == Aidebug.Debug_Point.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasCol()) {
          mergeCol(other.getCol());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (hasCol()) {
          if (!getCol().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 26: {
              Aidebug.color.Builder subBuilder = Aidebug.color.newBuilder();
              if (hasCol()) {
                subBuilder.mergeFrom(getCol());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCol(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float x = 1;
      private float x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getX() {
        return x_;
      }
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }
      
      // required float y = 2;
      private float y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getY() {
        return y_;
      }
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }
      
      // optional .color col = 3;
      private Aidebug.color col_ = Aidebug.color.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder> colBuilder_;
      public boolean hasCol() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public Aidebug.color getCol() {
        if (colBuilder_ == null) {
          return col_;
        } else {
          return colBuilder_.getMessage();
        }
      }
      public Builder setCol(Aidebug.color value) {
        if (colBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          col_ = value;
          onChanged();
        } else {
          colBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setCol(
          Aidebug.color.Builder builderForValue) {
        if (colBuilder_ == null) {
          col_ = builderForValue.build();
          onChanged();
        } else {
          colBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeCol(Aidebug.color value) {
        if (colBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              col_ != Aidebug.color.getDefaultInstance()) {
            col_ =
              Aidebug.color.newBuilder(col_).mergeFrom(value).buildPartial();
          } else {
            col_ = value;
          }
          onChanged();
        } else {
          colBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearCol() {
        if (colBuilder_ == null) {
          col_ = Aidebug.color.getDefaultInstance();
          onChanged();
        } else {
          colBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public Aidebug.color.Builder getColBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getColFieldBuilder().getBuilder();
      }
      public Aidebug.colorOrBuilder getColOrBuilder() {
        if (colBuilder_ != null) {
          return colBuilder_.getMessageOrBuilder();
        } else {
          return col_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder> 
          getColFieldBuilder() {
        if (colBuilder_ == null) {
          colBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder>(
                  col_,
                  getParentForChildren(),
                  isClean());
          col_ = null;
        }
        return colBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Debug_Point)
    }
    
    static {
      defaultInstance = new Debug_Point(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Debug_Point)
  }
  
  public interface Debug_LineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required float x1 = 1;
    boolean hasX1();
    float getX1();
    
    // required float y1 = 2;
    boolean hasY1();
    float getY1();
    
    // required float x2 = 3;
    boolean hasX2();
    float getX2();
    
    // required float y2 = 4;
    boolean hasY2();
    float getY2();
    
    // optional .color col = 5;
    boolean hasCol();
    Aidebug.color getCol();
    Aidebug.colorOrBuilder getColOrBuilder();
  }
  public static final class Debug_Line extends
      com.google.protobuf.GeneratedMessage
      implements Debug_LineOrBuilder {
    // Use Debug_Line.newBuilder() to construct.
    private Debug_Line(Builder builder) {
      super(builder);
    }
    private Debug_Line(boolean noInit) {}
    
    private static final Debug_Line defaultInstance;
    public static Debug_Line getDefaultInstance() {
      return defaultInstance;
    }
    
    public Debug_Line getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_Debug_Line_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_Debug_Line_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required float x1 = 1;
    public static final int X1_FIELD_NUMBER = 1;
    private float x1_;
    public boolean hasX1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getX1() {
      return x1_;
    }
    
    // required float y1 = 2;
    public static final int Y1_FIELD_NUMBER = 2;
    private float y1_;
    public boolean hasY1() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getY1() {
      return y1_;
    }
    
    // required float x2 = 3;
    public static final int X2_FIELD_NUMBER = 3;
    private float x2_;
    public boolean hasX2() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getX2() {
      return x2_;
    }
    
    // required float y2 = 4;
    public static final int Y2_FIELD_NUMBER = 4;
    private float y2_;
    public boolean hasY2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getY2() {
      return y2_;
    }
    
    // optional .color col = 5;
    public static final int COL_FIELD_NUMBER = 5;
    private Aidebug.color col_;
    public boolean hasCol() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public Aidebug.color getCol() {
      return col_;
    }
    public Aidebug.colorOrBuilder getColOrBuilder() {
      return col_;
    }
    
    private void initFields() {
      x1_ = 0F;
      y1_ = 0F;
      x2_ = 0F;
      y2_ = 0F;
      col_ = Aidebug.color.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasX2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCol()) {
        if (!getCol().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, x2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, y2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, col_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y1_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, x2_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, y2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, col_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.Debug_Line parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Line parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Line parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Line parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Line parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Line parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Line parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Line parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Line parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Line parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.Debug_Line prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.Debug_LineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_Debug_Line_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_Debug_Line_fieldAccessorTable;
      }
      
      // Construct using Aidebug.Debug_Line.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getColFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y1_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        x2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        y2_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (colBuilder_ == null) {
          col_ = Aidebug.color.getDefaultInstance();
        } else {
          colBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.Debug_Line.getDescriptor();
      }
      
      public Aidebug.Debug_Line getDefaultInstanceForType() {
        return Aidebug.Debug_Line.getDefaultInstance();
      }
      
      public Aidebug.Debug_Line build() {
        Aidebug.Debug_Line result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.Debug_Line buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.Debug_Line result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.Debug_Line buildPartial() {
        Aidebug.Debug_Line result = new Aidebug.Debug_Line(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x1_ = x1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y1_ = y1_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.x2_ = x2_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.y2_ = y2_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (colBuilder_ == null) {
          result.col_ = col_;
        } else {
          result.col_ = colBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.Debug_Line) {
          return mergeFrom((Aidebug.Debug_Line)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.Debug_Line other) {
        if (other == Aidebug.Debug_Line.getDefaultInstance()) return this;
        if (other.hasX1()) {
          setX1(other.getX1());
        }
        if (other.hasY1()) {
          setY1(other.getY1());
        }
        if (other.hasX2()) {
          setX2(other.getX2());
        }
        if (other.hasY2()) {
          setY2(other.getY2());
        }
        if (other.hasCol()) {
          mergeCol(other.getCol());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX1()) {
          
          return false;
        }
        if (!hasY1()) {
          
          return false;
        }
        if (!hasX2()) {
          
          return false;
        }
        if (!hasY2()) {
          
          return false;
        }
        if (hasCol()) {
          if (!getCol().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x1_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y1_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              x2_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              y2_ = input.readFloat();
              break;
            }
            case 42: {
              Aidebug.color.Builder subBuilder = Aidebug.color.newBuilder();
              if (hasCol()) {
                subBuilder.mergeFrom(getCol());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCol(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float x1 = 1;
      private float x1_ ;
      public boolean hasX1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getX1() {
        return x1_;
      }
      public Builder setX1(float value) {
        bitField0_ |= 0x00000001;
        x1_ = value;
        onChanged();
        return this;
      }
      public Builder clearX1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x1_ = 0F;
        onChanged();
        return this;
      }
      
      // required float y1 = 2;
      private float y1_ ;
      public boolean hasY1() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getY1() {
        return y1_;
      }
      public Builder setY1(float value) {
        bitField0_ |= 0x00000002;
        y1_ = value;
        onChanged();
        return this;
      }
      public Builder clearY1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y1_ = 0F;
        onChanged();
        return this;
      }
      
      // required float x2 = 3;
      private float x2_ ;
      public boolean hasX2() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getX2() {
        return x2_;
      }
      public Builder setX2(float value) {
        bitField0_ |= 0x00000004;
        x2_ = value;
        onChanged();
        return this;
      }
      public Builder clearX2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        x2_ = 0F;
        onChanged();
        return this;
      }
      
      // required float y2 = 4;
      private float y2_ ;
      public boolean hasY2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getY2() {
        return y2_;
      }
      public Builder setY2(float value) {
        bitField0_ |= 0x00000008;
        y2_ = value;
        onChanged();
        return this;
      }
      public Builder clearY2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y2_ = 0F;
        onChanged();
        return this;
      }
      
      // optional .color col = 5;
      private Aidebug.color col_ = Aidebug.color.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder> colBuilder_;
      public boolean hasCol() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public Aidebug.color getCol() {
        if (colBuilder_ == null) {
          return col_;
        } else {
          return colBuilder_.getMessage();
        }
      }
      public Builder setCol(Aidebug.color value) {
        if (colBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          col_ = value;
          onChanged();
        } else {
          colBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setCol(
          Aidebug.color.Builder builderForValue) {
        if (colBuilder_ == null) {
          col_ = builderForValue.build();
          onChanged();
        } else {
          colBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeCol(Aidebug.color value) {
        if (colBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              col_ != Aidebug.color.getDefaultInstance()) {
            col_ =
              Aidebug.color.newBuilder(col_).mergeFrom(value).buildPartial();
          } else {
            col_ = value;
          }
          onChanged();
        } else {
          colBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearCol() {
        if (colBuilder_ == null) {
          col_ = Aidebug.color.getDefaultInstance();
          onChanged();
        } else {
          colBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public Aidebug.color.Builder getColBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getColFieldBuilder().getBuilder();
      }
      public Aidebug.colorOrBuilder getColOrBuilder() {
        if (colBuilder_ != null) {
          return colBuilder_.getMessageOrBuilder();
        } else {
          return col_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder> 
          getColFieldBuilder() {
        if (colBuilder_ == null) {
          colBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder>(
                  col_,
                  getParentForChildren(),
                  isClean());
          col_ = null;
        }
        return colBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Debug_Line)
    }
    
    static {
      defaultInstance = new Debug_Line(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Debug_Line)
  }
  
  public interface Debug_RectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required float x = 1;
    boolean hasX();
    float getX();
    
    // required float y = 2;
    boolean hasY();
    float getY();
    
    // required float w = 3;
    boolean hasW();
    float getW();
    
    // required float h = 4;
    boolean hasH();
    float getH();
    
    // optional .color col = 5;
    boolean hasCol();
    Aidebug.color getCol();
    Aidebug.colorOrBuilder getColOrBuilder();
  }
  public static final class Debug_Rect extends
      com.google.protobuf.GeneratedMessage
      implements Debug_RectOrBuilder {
    // Use Debug_Rect.newBuilder() to construct.
    private Debug_Rect(Builder builder) {
      super(builder);
    }
    private Debug_Rect(boolean noInit) {}
    
    private static final Debug_Rect defaultInstance;
    public static Debug_Rect getDefaultInstance() {
      return defaultInstance;
    }
    
    public Debug_Rect getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_Debug_Rect_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_Debug_Rect_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getX() {
      return x_;
    }
    
    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getY() {
      return y_;
    }
    
    // required float w = 3;
    public static final int W_FIELD_NUMBER = 3;
    private float w_;
    public boolean hasW() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getW() {
      return w_;
    }
    
    // required float h = 4;
    public static final int H_FIELD_NUMBER = 4;
    private float h_;
    public boolean hasH() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getH() {
      return h_;
    }
    
    // optional .color col = 5;
    public static final int COL_FIELD_NUMBER = 5;
    private Aidebug.color col_;
    public boolean hasCol() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public Aidebug.color getCol() {
      return col_;
    }
    public Aidebug.colorOrBuilder getColOrBuilder() {
      return col_;
    }
    
    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      w_ = 0F;
      h_ = 0F;
      col_ = Aidebug.color.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasW()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasH()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCol()) {
        if (!getCol().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, w_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, h_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, col_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, w_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, h_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, col_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.Debug_Rect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Rect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Rect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Rect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Rect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Rect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Rect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Rect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Rect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Rect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.Debug_Rect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.Debug_RectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_Debug_Rect_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_Debug_Rect_fieldAccessorTable;
      }
      
      // Construct using Aidebug.Debug_Rect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getColFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        w_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        h_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (colBuilder_ == null) {
          col_ = Aidebug.color.getDefaultInstance();
        } else {
          colBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.Debug_Rect.getDescriptor();
      }
      
      public Aidebug.Debug_Rect getDefaultInstanceForType() {
        return Aidebug.Debug_Rect.getDefaultInstance();
      }
      
      public Aidebug.Debug_Rect build() {
        Aidebug.Debug_Rect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.Debug_Rect buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.Debug_Rect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.Debug_Rect buildPartial() {
        Aidebug.Debug_Rect result = new Aidebug.Debug_Rect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.w_ = w_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.h_ = h_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (colBuilder_ == null) {
          result.col_ = col_;
        } else {
          result.col_ = colBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.Debug_Rect) {
          return mergeFrom((Aidebug.Debug_Rect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.Debug_Rect other) {
        if (other == Aidebug.Debug_Rect.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasW()) {
          setW(other.getW());
        }
        if (other.hasH()) {
          setH(other.getH());
        }
        if (other.hasCol()) {
          mergeCol(other.getCol());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasW()) {
          
          return false;
        }
        if (!hasH()) {
          
          return false;
        }
        if (hasCol()) {
          if (!getCol().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              w_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              h_ = input.readFloat();
              break;
            }
            case 42: {
              Aidebug.color.Builder subBuilder = Aidebug.color.newBuilder();
              if (hasCol()) {
                subBuilder.mergeFrom(getCol());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCol(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float x = 1;
      private float x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getX() {
        return x_;
      }
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }
      
      // required float y = 2;
      private float y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getY() {
        return y_;
      }
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }
      
      // required float w = 3;
      private float w_ ;
      public boolean hasW() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getW() {
        return w_;
      }
      public Builder setW(float value) {
        bitField0_ |= 0x00000004;
        w_ = value;
        onChanged();
        return this;
      }
      public Builder clearW() {
        bitField0_ = (bitField0_ & ~0x00000004);
        w_ = 0F;
        onChanged();
        return this;
      }
      
      // required float h = 4;
      private float h_ ;
      public boolean hasH() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getH() {
        return h_;
      }
      public Builder setH(float value) {
        bitField0_ |= 0x00000008;
        h_ = value;
        onChanged();
        return this;
      }
      public Builder clearH() {
        bitField0_ = (bitField0_ & ~0x00000008);
        h_ = 0F;
        onChanged();
        return this;
      }
      
      // optional .color col = 5;
      private Aidebug.color col_ = Aidebug.color.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder> colBuilder_;
      public boolean hasCol() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public Aidebug.color getCol() {
        if (colBuilder_ == null) {
          return col_;
        } else {
          return colBuilder_.getMessage();
        }
      }
      public Builder setCol(Aidebug.color value) {
        if (colBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          col_ = value;
          onChanged();
        } else {
          colBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setCol(
          Aidebug.color.Builder builderForValue) {
        if (colBuilder_ == null) {
          col_ = builderForValue.build();
          onChanged();
        } else {
          colBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeCol(Aidebug.color value) {
        if (colBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              col_ != Aidebug.color.getDefaultInstance()) {
            col_ =
              Aidebug.color.newBuilder(col_).mergeFrom(value).buildPartial();
          } else {
            col_ = value;
          }
          onChanged();
        } else {
          colBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearCol() {
        if (colBuilder_ == null) {
          col_ = Aidebug.color.getDefaultInstance();
          onChanged();
        } else {
          colBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public Aidebug.color.Builder getColBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getColFieldBuilder().getBuilder();
      }
      public Aidebug.colorOrBuilder getColOrBuilder() {
        if (colBuilder_ != null) {
          return colBuilder_.getMessageOrBuilder();
        } else {
          return col_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder> 
          getColFieldBuilder() {
        if (colBuilder_ == null) {
          colBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder>(
                  col_,
                  getParentForChildren(),
                  isClean());
          col_ = null;
        }
        return colBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Debug_Rect)
    }
    
    static {
      defaultInstance = new Debug_Rect(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Debug_Rect)
  }
  
  public interface Debug_CircleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required float x = 1;
    boolean hasX();
    float getX();
    
    // required float y = 2;
    boolean hasY();
    float getY();
    
    // required float r = 3;
    boolean hasR();
    float getR();
    
    // optional .color col = 4;
    boolean hasCol();
    Aidebug.color getCol();
    Aidebug.colorOrBuilder getColOrBuilder();
  }
  public static final class Debug_Circle extends
      com.google.protobuf.GeneratedMessage
      implements Debug_CircleOrBuilder {
    // Use Debug_Circle.newBuilder() to construct.
    private Debug_Circle(Builder builder) {
      super(builder);
    }
    private Debug_Circle(boolean noInit) {}
    
    private static final Debug_Circle defaultInstance;
    public static Debug_Circle getDefaultInstance() {
      return defaultInstance;
    }
    
    public Debug_Circle getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_Debug_Circle_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_Debug_Circle_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getX() {
      return x_;
    }
    
    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getY() {
      return y_;
    }
    
    // required float r = 3;
    public static final int R_FIELD_NUMBER = 3;
    private float r_;
    public boolean hasR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getR() {
      return r_;
    }
    
    // optional .color col = 4;
    public static final int COL_FIELD_NUMBER = 4;
    private Aidebug.color col_;
    public boolean hasCol() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public Aidebug.color getCol() {
      return col_;
    }
    public Aidebug.colorOrBuilder getColOrBuilder() {
      return col_;
    }
    
    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      r_ = 0F;
      col_ = Aidebug.color.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCol()) {
        if (!getCol().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, r_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, col_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, r_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, col_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.Debug_Circle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Circle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Circle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Circle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Circle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Circle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Circle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Circle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Circle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Circle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.Debug_Circle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.Debug_CircleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_Debug_Circle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_Debug_Circle_fieldAccessorTable;
      }
      
      // Construct using Aidebug.Debug_Circle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getColFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        r_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (colBuilder_ == null) {
          col_ = Aidebug.color.getDefaultInstance();
        } else {
          colBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.Debug_Circle.getDescriptor();
      }
      
      public Aidebug.Debug_Circle getDefaultInstanceForType() {
        return Aidebug.Debug_Circle.getDefaultInstance();
      }
      
      public Aidebug.Debug_Circle build() {
        Aidebug.Debug_Circle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.Debug_Circle buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.Debug_Circle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.Debug_Circle buildPartial() {
        Aidebug.Debug_Circle result = new Aidebug.Debug_Circle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.r_ = r_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (colBuilder_ == null) {
          result.col_ = col_;
        } else {
          result.col_ = colBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.Debug_Circle) {
          return mergeFrom((Aidebug.Debug_Circle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.Debug_Circle other) {
        if (other == Aidebug.Debug_Circle.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasR()) {
          setR(other.getR());
        }
        if (other.hasCol()) {
          mergeCol(other.getCol());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasR()) {
          
          return false;
        }
        if (hasCol()) {
          if (!getCol().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              r_ = input.readFloat();
              break;
            }
            case 34: {
              Aidebug.color.Builder subBuilder = Aidebug.color.newBuilder();
              if (hasCol()) {
                subBuilder.mergeFrom(getCol());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCol(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required float x = 1;
      private float x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getX() {
        return x_;
      }
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }
      
      // required float y = 2;
      private float y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getY() {
        return y_;
      }
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }
      
      // required float r = 3;
      private float r_ ;
      public boolean hasR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getR() {
        return r_;
      }
      public Builder setR(float value) {
        bitField0_ |= 0x00000004;
        r_ = value;
        onChanged();
        return this;
      }
      public Builder clearR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        r_ = 0F;
        onChanged();
        return this;
      }
      
      // optional .color col = 4;
      private Aidebug.color col_ = Aidebug.color.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder> colBuilder_;
      public boolean hasCol() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public Aidebug.color getCol() {
        if (colBuilder_ == null) {
          return col_;
        } else {
          return colBuilder_.getMessage();
        }
      }
      public Builder setCol(Aidebug.color value) {
        if (colBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          col_ = value;
          onChanged();
        } else {
          colBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setCol(
          Aidebug.color.Builder builderForValue) {
        if (colBuilder_ == null) {
          col_ = builderForValue.build();
          onChanged();
        } else {
          colBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeCol(Aidebug.color value) {
        if (colBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              col_ != Aidebug.color.getDefaultInstance()) {
            col_ =
              Aidebug.color.newBuilder(col_).mergeFrom(value).buildPartial();
          } else {
            col_ = value;
          }
          onChanged();
        } else {
          colBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearCol() {
        if (colBuilder_ == null) {
          col_ = Aidebug.color.getDefaultInstance();
          onChanged();
        } else {
          colBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public Aidebug.color.Builder getColBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getColFieldBuilder().getBuilder();
      }
      public Aidebug.colorOrBuilder getColOrBuilder() {
        if (colBuilder_ != null) {
          return colBuilder_.getMessageOrBuilder();
        } else {
          return col_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder> 
          getColFieldBuilder() {
        if (colBuilder_ == null) {
          colBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Aidebug.color, Aidebug.color.Builder, Aidebug.colorOrBuilder>(
                  col_,
                  getParentForChildren(),
                  isClean());
          col_ = null;
        }
        return colBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Debug_Circle)
    }
    
    static {
      defaultInstance = new Debug_Circle(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Debug_Circle)
  }
  
  public interface Data_NodeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // required .Data_Type type = 2;
    boolean hasType();
    Aidebug.Data_Type getType();
    
    // required string data = 3;
    boolean hasData();
    String getData();
    
    // optional string hint = 4;
    boolean hasHint();
    String getHint();
  }
  public static final class Data_Node extends
      com.google.protobuf.GeneratedMessage
      implements Data_NodeOrBuilder {
    // Use Data_Node.newBuilder() to construct.
    private Data_Node(Builder builder) {
      super(builder);
    }
    private Data_Node(boolean noInit) {}
    
    private static final Data_Node defaultInstance;
    public static Data_Node getDefaultInstance() {
      return defaultInstance;
    }
    
    public Data_Node getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_Data_Node_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_Data_Node_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .Data_Type type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private Aidebug.Data_Type type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public Aidebug.Data_Type getType() {
      return type_;
    }
    
    // required string data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private java.lang.Object data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          data_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string hint = 4;
    public static final int HINT_FIELD_NUMBER = 4;
    private java.lang.Object hint_;
    public boolean hasHint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getHint() {
      java.lang.Object ref = hint_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hint_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHintBytes() {
      java.lang.Object ref = hint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "";
      type_ = Aidebug.Data_Type.imm_bool;
      data_ = "";
      hint_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDataBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getHintBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDataBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getHintBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.Data_Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Data_Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Data_Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Data_Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Data_Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Data_Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Data_Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Data_Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Data_Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Data_Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.Data_Node prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.Data_NodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_Data_Node_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_Data_Node_fieldAccessorTable;
      }
      
      // Construct using Aidebug.Data_Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = Aidebug.Data_Type.imm_bool;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        hint_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.Data_Node.getDescriptor();
      }
      
      public Aidebug.Data_Node getDefaultInstanceForType() {
        return Aidebug.Data_Node.getDefaultInstance();
      }
      
      public Aidebug.Data_Node build() {
        Aidebug.Data_Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.Data_Node buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.Data_Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.Data_Node buildPartial() {
        Aidebug.Data_Node result = new Aidebug.Data_Node(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hint_ = hint_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.Data_Node) {
          return mergeFrom((Aidebug.Data_Node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.Data_Node other) {
        if (other == Aidebug.Data_Node.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasHint()) {
          setHint(other.getHint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              Aidebug.Data_Type value = Aidebug.Data_Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              hint_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // required .Data_Type type = 2;
      private Aidebug.Data_Type type_ = Aidebug.Data_Type.imm_bool;
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Aidebug.Data_Type getType() {
        return type_;
      }
      public Builder setType(Aidebug.Data_Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = Aidebug.Data_Type.imm_bool;
        onChanged();
        return this;
      }
      
      // required string data = 3;
      private java.lang.Object data_ = "";
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          data_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setData(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      void setData(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
      }
      
      // optional string hint = 4;
      private java.lang.Object hint_ = "";
      public boolean hasHint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getHint() {
        java.lang.Object ref = hint_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hint_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHint(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hint_ = value;
        onChanged();
        return this;
      }
      public Builder clearHint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hint_ = getDefaultInstance().getHint();
        onChanged();
        return this;
      }
      void setHint(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        hint_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:Data_Node)
    }
    
    static {
      defaultInstance = new Data_Node(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Data_Node)
  }
  
  public interface Debug_DrawOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .Debug_Point point = 1;
    java.util.List<Aidebug.Debug_Point> 
        getPointList();
    Aidebug.Debug_Point getPoint(int index);
    int getPointCount();
    java.util.List<? extends Aidebug.Debug_PointOrBuilder> 
        getPointOrBuilderList();
    Aidebug.Debug_PointOrBuilder getPointOrBuilder(
        int index);
    
    // repeated .Debug_Line line = 2;
    java.util.List<Aidebug.Debug_Line> 
        getLineList();
    Aidebug.Debug_Line getLine(int index);
    int getLineCount();
    java.util.List<? extends Aidebug.Debug_LineOrBuilder> 
        getLineOrBuilderList();
    Aidebug.Debug_LineOrBuilder getLineOrBuilder(
        int index);
    
    // repeated .Debug_Rect rect = 3;
    java.util.List<Aidebug.Debug_Rect> 
        getRectList();
    Aidebug.Debug_Rect getRect(int index);
    int getRectCount();
    java.util.List<? extends Aidebug.Debug_RectOrBuilder> 
        getRectOrBuilderList();
    Aidebug.Debug_RectOrBuilder getRectOrBuilder(
        int index);
    
    // repeated .Debug_Circle circle = 4;
    java.util.List<Aidebug.Debug_Circle> 
        getCircleList();
    Aidebug.Debug_Circle getCircle(int index);
    int getCircleCount();
    java.util.List<? extends Aidebug.Debug_CircleOrBuilder> 
        getCircleOrBuilderList();
    Aidebug.Debug_CircleOrBuilder getCircleOrBuilder(
        int index);
  }
  public static final class Debug_Draw extends
      com.google.protobuf.GeneratedMessage
      implements Debug_DrawOrBuilder {
    // Use Debug_Draw.newBuilder() to construct.
    private Debug_Draw(Builder builder) {
      super(builder);
    }
    private Debug_Draw(boolean noInit) {}
    
    private static final Debug_Draw defaultInstance;
    public static Debug_Draw getDefaultInstance() {
      return defaultInstance;
    }
    
    public Debug_Draw getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_Debug_Draw_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_Debug_Draw_fieldAccessorTable;
    }
    
    // repeated .Debug_Point point = 1;
    public static final int POINT_FIELD_NUMBER = 1;
    private java.util.List<Aidebug.Debug_Point> point_;
    public java.util.List<Aidebug.Debug_Point> getPointList() {
      return point_;
    }
    public java.util.List<? extends Aidebug.Debug_PointOrBuilder> 
        getPointOrBuilderList() {
      return point_;
    }
    public int getPointCount() {
      return point_.size();
    }
    public Aidebug.Debug_Point getPoint(int index) {
      return point_.get(index);
    }
    public Aidebug.Debug_PointOrBuilder getPointOrBuilder(
        int index) {
      return point_.get(index);
    }
    
    // repeated .Debug_Line line = 2;
    public static final int LINE_FIELD_NUMBER = 2;
    private java.util.List<Aidebug.Debug_Line> line_;
    public java.util.List<Aidebug.Debug_Line> getLineList() {
      return line_;
    }
    public java.util.List<? extends Aidebug.Debug_LineOrBuilder> 
        getLineOrBuilderList() {
      return line_;
    }
    public int getLineCount() {
      return line_.size();
    }
    public Aidebug.Debug_Line getLine(int index) {
      return line_.get(index);
    }
    public Aidebug.Debug_LineOrBuilder getLineOrBuilder(
        int index) {
      return line_.get(index);
    }
    
    // repeated .Debug_Rect rect = 3;
    public static final int RECT_FIELD_NUMBER = 3;
    private java.util.List<Aidebug.Debug_Rect> rect_;
    public java.util.List<Aidebug.Debug_Rect> getRectList() {
      return rect_;
    }
    public java.util.List<? extends Aidebug.Debug_RectOrBuilder> 
        getRectOrBuilderList() {
      return rect_;
    }
    public int getRectCount() {
      return rect_.size();
    }
    public Aidebug.Debug_Rect getRect(int index) {
      return rect_.get(index);
    }
    public Aidebug.Debug_RectOrBuilder getRectOrBuilder(
        int index) {
      return rect_.get(index);
    }
    
    // repeated .Debug_Circle circle = 4;
    public static final int CIRCLE_FIELD_NUMBER = 4;
    private java.util.List<Aidebug.Debug_Circle> circle_;
    public java.util.List<Aidebug.Debug_Circle> getCircleList() {
      return circle_;
    }
    public java.util.List<? extends Aidebug.Debug_CircleOrBuilder> 
        getCircleOrBuilderList() {
      return circle_;
    }
    public int getCircleCount() {
      return circle_.size();
    }
    public Aidebug.Debug_Circle getCircle(int index) {
      return circle_.get(index);
    }
    public Aidebug.Debug_CircleOrBuilder getCircleOrBuilder(
        int index) {
      return circle_.get(index);
    }
    
    private void initFields() {
      point_ = java.util.Collections.emptyList();
      line_ = java.util.Collections.emptyList();
      rect_ = java.util.Collections.emptyList();
      circle_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getPointCount(); i++) {
        if (!getPoint(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLineCount(); i++) {
        if (!getLine(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRectCount(); i++) {
        if (!getRect(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCircleCount(); i++) {
        if (!getCircle(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < point_.size(); i++) {
        output.writeMessage(1, point_.get(i));
      }
      for (int i = 0; i < line_.size(); i++) {
        output.writeMessage(2, line_.get(i));
      }
      for (int i = 0; i < rect_.size(); i++) {
        output.writeMessage(3, rect_.get(i));
      }
      for (int i = 0; i < circle_.size(); i++) {
        output.writeMessage(4, circle_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < point_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, point_.get(i));
      }
      for (int i = 0; i < line_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, line_.get(i));
      }
      for (int i = 0; i < rect_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, rect_.get(i));
      }
      for (int i = 0; i < circle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, circle_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.Debug_Draw parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Draw parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Draw parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Debug_Draw parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Draw parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Draw parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Debug_Draw parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Draw parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Debug_Draw parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Debug_Draw parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.Debug_Draw prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.Debug_DrawOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_Debug_Draw_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_Debug_Draw_fieldAccessorTable;
      }
      
      // Construct using Aidebug.Debug_Draw.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPointFieldBuilder();
          getLineFieldBuilder();
          getRectFieldBuilder();
          getCircleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pointBuilder_.clear();
        }
        if (lineBuilder_ == null) {
          line_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          lineBuilder_.clear();
        }
        if (rectBuilder_ == null) {
          rect_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rectBuilder_.clear();
        }
        if (circleBuilder_ == null) {
          circle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          circleBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.Debug_Draw.getDescriptor();
      }
      
      public Aidebug.Debug_Draw getDefaultInstanceForType() {
        return Aidebug.Debug_Draw.getDefaultInstance();
      }
      
      public Aidebug.Debug_Draw build() {
        Aidebug.Debug_Draw result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.Debug_Draw buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.Debug_Draw result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.Debug_Draw buildPartial() {
        Aidebug.Debug_Draw result = new Aidebug.Debug_Draw(this);
        int from_bitField0_ = bitField0_;
        if (pointBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            point_ = java.util.Collections.unmodifiableList(point_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.point_ = point_;
        } else {
          result.point_ = pointBuilder_.build();
        }
        if (lineBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            line_ = java.util.Collections.unmodifiableList(line_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.line_ = line_;
        } else {
          result.line_ = lineBuilder_.build();
        }
        if (rectBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            rect_ = java.util.Collections.unmodifiableList(rect_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.rect_ = rect_;
        } else {
          result.rect_ = rectBuilder_.build();
        }
        if (circleBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            circle_ = java.util.Collections.unmodifiableList(circle_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.circle_ = circle_;
        } else {
          result.circle_ = circleBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.Debug_Draw) {
          return mergeFrom((Aidebug.Debug_Draw)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.Debug_Draw other) {
        if (other == Aidebug.Debug_Draw.getDefaultInstance()) return this;
        if (pointBuilder_ == null) {
          if (!other.point_.isEmpty()) {
            if (point_.isEmpty()) {
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePointIsMutable();
              point_.addAll(other.point_);
            }
            onChanged();
          }
        } else {
          if (!other.point_.isEmpty()) {
            if (pointBuilder_.isEmpty()) {
              pointBuilder_.dispose();
              pointBuilder_ = null;
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pointBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPointFieldBuilder() : null;
            } else {
              pointBuilder_.addAllMessages(other.point_);
            }
          }
        }
        if (lineBuilder_ == null) {
          if (!other.line_.isEmpty()) {
            if (line_.isEmpty()) {
              line_ = other.line_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLineIsMutable();
              line_.addAll(other.line_);
            }
            onChanged();
          }
        } else {
          if (!other.line_.isEmpty()) {
            if (lineBuilder_.isEmpty()) {
              lineBuilder_.dispose();
              lineBuilder_ = null;
              line_ = other.line_;
              bitField0_ = (bitField0_ & ~0x00000002);
              lineBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLineFieldBuilder() : null;
            } else {
              lineBuilder_.addAllMessages(other.line_);
            }
          }
        }
        if (rectBuilder_ == null) {
          if (!other.rect_.isEmpty()) {
            if (rect_.isEmpty()) {
              rect_ = other.rect_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRectIsMutable();
              rect_.addAll(other.rect_);
            }
            onChanged();
          }
        } else {
          if (!other.rect_.isEmpty()) {
            if (rectBuilder_.isEmpty()) {
              rectBuilder_.dispose();
              rectBuilder_ = null;
              rect_ = other.rect_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rectBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRectFieldBuilder() : null;
            } else {
              rectBuilder_.addAllMessages(other.rect_);
            }
          }
        }
        if (circleBuilder_ == null) {
          if (!other.circle_.isEmpty()) {
            if (circle_.isEmpty()) {
              circle_ = other.circle_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCircleIsMutable();
              circle_.addAll(other.circle_);
            }
            onChanged();
          }
        } else {
          if (!other.circle_.isEmpty()) {
            if (circleBuilder_.isEmpty()) {
              circleBuilder_.dispose();
              circleBuilder_ = null;
              circle_ = other.circle_;
              bitField0_ = (bitField0_ & ~0x00000008);
              circleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCircleFieldBuilder() : null;
            } else {
              circleBuilder_.addAllMessages(other.circle_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getPointCount(); i++) {
          if (!getPoint(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLineCount(); i++) {
          if (!getLine(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRectCount(); i++) {
          if (!getRect(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCircleCount(); i++) {
          if (!getCircle(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Aidebug.Debug_Point.Builder subBuilder = Aidebug.Debug_Point.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPoint(subBuilder.buildPartial());
              break;
            }
            case 18: {
              Aidebug.Debug_Line.Builder subBuilder = Aidebug.Debug_Line.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLine(subBuilder.buildPartial());
              break;
            }
            case 26: {
              Aidebug.Debug_Rect.Builder subBuilder = Aidebug.Debug_Rect.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRect(subBuilder.buildPartial());
              break;
            }
            case 34: {
              Aidebug.Debug_Circle.Builder subBuilder = Aidebug.Debug_Circle.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCircle(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .Debug_Point point = 1;
      private java.util.List<Aidebug.Debug_Point> point_ =
        java.util.Collections.emptyList();
      private void ensurePointIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          point_ = new java.util.ArrayList<Aidebug.Debug_Point>(point_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Point, Aidebug.Debug_Point.Builder, Aidebug.Debug_PointOrBuilder> pointBuilder_;
      
      public java.util.List<Aidebug.Debug_Point> getPointList() {
        if (pointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(point_);
        } else {
          return pointBuilder_.getMessageList();
        }
      }
      public int getPointCount() {
        if (pointBuilder_ == null) {
          return point_.size();
        } else {
          return pointBuilder_.getCount();
        }
      }
      public Aidebug.Debug_Point getPoint(int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);
        } else {
          return pointBuilder_.getMessage(index);
        }
      }
      public Builder setPoint(
          int index, Aidebug.Debug_Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.set(index, value);
          onChanged();
        } else {
          pointBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPoint(
          int index, Aidebug.Debug_Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPoint(Aidebug.Debug_Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(value);
          onChanged();
        } else {
          pointBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPoint(
          int index, Aidebug.Debug_Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(index, value);
          onChanged();
        } else {
          pointBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPoint(
          Aidebug.Debug_Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPoint(
          int index, Aidebug.Debug_Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPoint(
          java.lang.Iterable<? extends Aidebug.Debug_Point> values) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          super.addAll(values, point_);
          onChanged();
        } else {
          pointBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPoint() {
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pointBuilder_.clear();
        }
        return this;
      }
      public Builder removePoint(int index) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.remove(index);
          onChanged();
        } else {
          pointBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Debug_Point.Builder getPointBuilder(
          int index) {
        return getPointFieldBuilder().getBuilder(index);
      }
      public Aidebug.Debug_PointOrBuilder getPointOrBuilder(
          int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);  } else {
          return pointBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Debug_PointOrBuilder> 
           getPointOrBuilderList() {
        if (pointBuilder_ != null) {
          return pointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(point_);
        }
      }
      public Aidebug.Debug_Point.Builder addPointBuilder() {
        return getPointFieldBuilder().addBuilder(
            Aidebug.Debug_Point.getDefaultInstance());
      }
      public Aidebug.Debug_Point.Builder addPointBuilder(
          int index) {
        return getPointFieldBuilder().addBuilder(
            index, Aidebug.Debug_Point.getDefaultInstance());
      }
      public java.util.List<Aidebug.Debug_Point.Builder> 
           getPointBuilderList() {
        return getPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Point, Aidebug.Debug_Point.Builder, Aidebug.Debug_PointOrBuilder> 
          getPointFieldBuilder() {
        if (pointBuilder_ == null) {
          pointBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Debug_Point, Aidebug.Debug_Point.Builder, Aidebug.Debug_PointOrBuilder>(
                  point_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          point_ = null;
        }
        return pointBuilder_;
      }
      
      // repeated .Debug_Line line = 2;
      private java.util.List<Aidebug.Debug_Line> line_ =
        java.util.Collections.emptyList();
      private void ensureLineIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          line_ = new java.util.ArrayList<Aidebug.Debug_Line>(line_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Line, Aidebug.Debug_Line.Builder, Aidebug.Debug_LineOrBuilder> lineBuilder_;
      
      public java.util.List<Aidebug.Debug_Line> getLineList() {
        if (lineBuilder_ == null) {
          return java.util.Collections.unmodifiableList(line_);
        } else {
          return lineBuilder_.getMessageList();
        }
      }
      public int getLineCount() {
        if (lineBuilder_ == null) {
          return line_.size();
        } else {
          return lineBuilder_.getCount();
        }
      }
      public Aidebug.Debug_Line getLine(int index) {
        if (lineBuilder_ == null) {
          return line_.get(index);
        } else {
          return lineBuilder_.getMessage(index);
        }
      }
      public Builder setLine(
          int index, Aidebug.Debug_Line value) {
        if (lineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineIsMutable();
          line_.set(index, value);
          onChanged();
        } else {
          lineBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setLine(
          int index, Aidebug.Debug_Line.Builder builderForValue) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          line_.set(index, builderForValue.build());
          onChanged();
        } else {
          lineBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addLine(Aidebug.Debug_Line value) {
        if (lineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineIsMutable();
          line_.add(value);
          onChanged();
        } else {
          lineBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addLine(
          int index, Aidebug.Debug_Line value) {
        if (lineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineIsMutable();
          line_.add(index, value);
          onChanged();
        } else {
          lineBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addLine(
          Aidebug.Debug_Line.Builder builderForValue) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          line_.add(builderForValue.build());
          onChanged();
        } else {
          lineBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addLine(
          int index, Aidebug.Debug_Line.Builder builderForValue) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          line_.add(index, builderForValue.build());
          onChanged();
        } else {
          lineBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllLine(
          java.lang.Iterable<? extends Aidebug.Debug_Line> values) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          super.addAll(values, line_);
          onChanged();
        } else {
          lineBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearLine() {
        if (lineBuilder_ == null) {
          line_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          lineBuilder_.clear();
        }
        return this;
      }
      public Builder removeLine(int index) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          line_.remove(index);
          onChanged();
        } else {
          lineBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Debug_Line.Builder getLineBuilder(
          int index) {
        return getLineFieldBuilder().getBuilder(index);
      }
      public Aidebug.Debug_LineOrBuilder getLineOrBuilder(
          int index) {
        if (lineBuilder_ == null) {
          return line_.get(index);  } else {
          return lineBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Debug_LineOrBuilder> 
           getLineOrBuilderList() {
        if (lineBuilder_ != null) {
          return lineBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(line_);
        }
      }
      public Aidebug.Debug_Line.Builder addLineBuilder() {
        return getLineFieldBuilder().addBuilder(
            Aidebug.Debug_Line.getDefaultInstance());
      }
      public Aidebug.Debug_Line.Builder addLineBuilder(
          int index) {
        return getLineFieldBuilder().addBuilder(
            index, Aidebug.Debug_Line.getDefaultInstance());
      }
      public java.util.List<Aidebug.Debug_Line.Builder> 
           getLineBuilderList() {
        return getLineFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Line, Aidebug.Debug_Line.Builder, Aidebug.Debug_LineOrBuilder> 
          getLineFieldBuilder() {
        if (lineBuilder_ == null) {
          lineBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Debug_Line, Aidebug.Debug_Line.Builder, Aidebug.Debug_LineOrBuilder>(
                  line_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          line_ = null;
        }
        return lineBuilder_;
      }
      
      // repeated .Debug_Rect rect = 3;
      private java.util.List<Aidebug.Debug_Rect> rect_ =
        java.util.Collections.emptyList();
      private void ensureRectIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          rect_ = new java.util.ArrayList<Aidebug.Debug_Rect>(rect_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Rect, Aidebug.Debug_Rect.Builder, Aidebug.Debug_RectOrBuilder> rectBuilder_;
      
      public java.util.List<Aidebug.Debug_Rect> getRectList() {
        if (rectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rect_);
        } else {
          return rectBuilder_.getMessageList();
        }
      }
      public int getRectCount() {
        if (rectBuilder_ == null) {
          return rect_.size();
        } else {
          return rectBuilder_.getCount();
        }
      }
      public Aidebug.Debug_Rect getRect(int index) {
        if (rectBuilder_ == null) {
          return rect_.get(index);
        } else {
          return rectBuilder_.getMessage(index);
        }
      }
      public Builder setRect(
          int index, Aidebug.Debug_Rect value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.set(index, value);
          onChanged();
        } else {
          rectBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRect(
          int index, Aidebug.Debug_Rect.Builder builderForValue) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          rect_.set(index, builderForValue.build());
          onChanged();
        } else {
          rectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRect(Aidebug.Debug_Rect value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.add(value);
          onChanged();
        } else {
          rectBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRect(
          int index, Aidebug.Debug_Rect value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.add(index, value);
          onChanged();
        } else {
          rectBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRect(
          Aidebug.Debug_Rect.Builder builderForValue) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          rect_.add(builderForValue.build());
          onChanged();
        } else {
          rectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRect(
          int index, Aidebug.Debug_Rect.Builder builderForValue) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          rect_.add(index, builderForValue.build());
          onChanged();
        } else {
          rectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRect(
          java.lang.Iterable<? extends Aidebug.Debug_Rect> values) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          super.addAll(values, rect_);
          onChanged();
        } else {
          rectBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRect() {
        if (rectBuilder_ == null) {
          rect_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rectBuilder_.clear();
        }
        return this;
      }
      public Builder removeRect(int index) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          rect_.remove(index);
          onChanged();
        } else {
          rectBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Debug_Rect.Builder getRectBuilder(
          int index) {
        return getRectFieldBuilder().getBuilder(index);
      }
      public Aidebug.Debug_RectOrBuilder getRectOrBuilder(
          int index) {
        if (rectBuilder_ == null) {
          return rect_.get(index);  } else {
          return rectBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Debug_RectOrBuilder> 
           getRectOrBuilderList() {
        if (rectBuilder_ != null) {
          return rectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rect_);
        }
      }
      public Aidebug.Debug_Rect.Builder addRectBuilder() {
        return getRectFieldBuilder().addBuilder(
            Aidebug.Debug_Rect.getDefaultInstance());
      }
      public Aidebug.Debug_Rect.Builder addRectBuilder(
          int index) {
        return getRectFieldBuilder().addBuilder(
            index, Aidebug.Debug_Rect.getDefaultInstance());
      }
      public java.util.List<Aidebug.Debug_Rect.Builder> 
           getRectBuilderList() {
        return getRectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Rect, Aidebug.Debug_Rect.Builder, Aidebug.Debug_RectOrBuilder> 
          getRectFieldBuilder() {
        if (rectBuilder_ == null) {
          rectBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Debug_Rect, Aidebug.Debug_Rect.Builder, Aidebug.Debug_RectOrBuilder>(
                  rect_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          rect_ = null;
        }
        return rectBuilder_;
      }
      
      // repeated .Debug_Circle circle = 4;
      private java.util.List<Aidebug.Debug_Circle> circle_ =
        java.util.Collections.emptyList();
      private void ensureCircleIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          circle_ = new java.util.ArrayList<Aidebug.Debug_Circle>(circle_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Circle, Aidebug.Debug_Circle.Builder, Aidebug.Debug_CircleOrBuilder> circleBuilder_;
      
      public java.util.List<Aidebug.Debug_Circle> getCircleList() {
        if (circleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(circle_);
        } else {
          return circleBuilder_.getMessageList();
        }
      }
      public int getCircleCount() {
        if (circleBuilder_ == null) {
          return circle_.size();
        } else {
          return circleBuilder_.getCount();
        }
      }
      public Aidebug.Debug_Circle getCircle(int index) {
        if (circleBuilder_ == null) {
          return circle_.get(index);
        } else {
          return circleBuilder_.getMessage(index);
        }
      }
      public Builder setCircle(
          int index, Aidebug.Debug_Circle value) {
        if (circleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCircleIsMutable();
          circle_.set(index, value);
          onChanged();
        } else {
          circleBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCircle(
          int index, Aidebug.Debug_Circle.Builder builderForValue) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          circle_.set(index, builderForValue.build());
          onChanged();
        } else {
          circleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCircle(Aidebug.Debug_Circle value) {
        if (circleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCircleIsMutable();
          circle_.add(value);
          onChanged();
        } else {
          circleBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCircle(
          int index, Aidebug.Debug_Circle value) {
        if (circleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCircleIsMutable();
          circle_.add(index, value);
          onChanged();
        } else {
          circleBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCircle(
          Aidebug.Debug_Circle.Builder builderForValue) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          circle_.add(builderForValue.build());
          onChanged();
        } else {
          circleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCircle(
          int index, Aidebug.Debug_Circle.Builder builderForValue) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          circle_.add(index, builderForValue.build());
          onChanged();
        } else {
          circleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCircle(
          java.lang.Iterable<? extends Aidebug.Debug_Circle> values) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          super.addAll(values, circle_);
          onChanged();
        } else {
          circleBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCircle() {
        if (circleBuilder_ == null) {
          circle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          circleBuilder_.clear();
        }
        return this;
      }
      public Builder removeCircle(int index) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          circle_.remove(index);
          onChanged();
        } else {
          circleBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Debug_Circle.Builder getCircleBuilder(
          int index) {
        return getCircleFieldBuilder().getBuilder(index);
      }
      public Aidebug.Debug_CircleOrBuilder getCircleOrBuilder(
          int index) {
        if (circleBuilder_ == null) {
          return circle_.get(index);  } else {
          return circleBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Debug_CircleOrBuilder> 
           getCircleOrBuilderList() {
        if (circleBuilder_ != null) {
          return circleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(circle_);
        }
      }
      public Aidebug.Debug_Circle.Builder addCircleBuilder() {
        return getCircleFieldBuilder().addBuilder(
            Aidebug.Debug_Circle.getDefaultInstance());
      }
      public Aidebug.Debug_Circle.Builder addCircleBuilder(
          int index) {
        return getCircleFieldBuilder().addBuilder(
            index, Aidebug.Debug_Circle.getDefaultInstance());
      }
      public java.util.List<Aidebug.Debug_Circle.Builder> 
           getCircleBuilderList() {
        return getCircleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Circle, Aidebug.Debug_Circle.Builder, Aidebug.Debug_CircleOrBuilder> 
          getCircleFieldBuilder() {
        if (circleBuilder_ == null) {
          circleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Debug_Circle, Aidebug.Debug_Circle.Builder, Aidebug.Debug_CircleOrBuilder>(
                  circle_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          circle_ = null;
        }
        return circleBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Debug_Draw)
    }
    
    static {
      defaultInstance = new Debug_Draw(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Debug_Draw)
  }
  
  public interface Function_DataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // optional string category = 2 [default = "Uncategorised"];
    boolean hasCategory();
    String getCategory();
    
    // optional string hint = 3;
    boolean hasHint();
    String getHint();
    
    // repeated .Data_Node In_Data = 4;
    java.util.List<Aidebug.Data_Node> 
        getInDataList();
    Aidebug.Data_Node getInData(int index);
    int getInDataCount();
    java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
        getInDataOrBuilderList();
    Aidebug.Data_NodeOrBuilder getInDataOrBuilder(
        int index);
    
    // repeated .Data_Node Out_Data = 5;
    java.util.List<Aidebug.Data_Node> 
        getOutDataList();
    Aidebug.Data_Node getOutData(int index);
    int getOutDataCount();
    java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
        getOutDataOrBuilderList();
    Aidebug.Data_NodeOrBuilder getOutDataOrBuilder(
        int index);
    
    // repeated .Data_Node Internal_Var = 6;
    java.util.List<Aidebug.Data_Node> 
        getInternalVarList();
    Aidebug.Data_Node getInternalVar(int index);
    int getInternalVarCount();
    java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
        getInternalVarOrBuilderList();
    Aidebug.Data_NodeOrBuilder getInternalVarOrBuilder(
        int index);
    
    // required .Debug_Draw draw_data = 7;
    boolean hasDrawData();
    Aidebug.Debug_Draw getDrawData();
    Aidebug.Debug_DrawOrBuilder getDrawDataOrBuilder();
  }
  public static final class Function_Data extends
      com.google.protobuf.GeneratedMessage
      implements Function_DataOrBuilder {
    // Use Function_Data.newBuilder() to construct.
    private Function_Data(Builder builder) {
      super(builder);
    }
    private Function_Data(boolean noInit) {}
    
    private static final Function_Data defaultInstance;
    public static Function_Data getDefaultInstance() {
      return defaultInstance;
    }
    
    public Function_Data getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_Function_Data_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_Function_Data_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string category = 2 [default = "Uncategorised"];
    public static final int CATEGORY_FIELD_NUMBER = 2;
    private java.lang.Object category_;
    public boolean hasCategory() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getCategory() {
      java.lang.Object ref = category_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          category_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCategoryBytes() {
      java.lang.Object ref = category_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        category_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string hint = 3;
    public static final int HINT_FIELD_NUMBER = 3;
    private java.lang.Object hint_;
    public boolean hasHint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getHint() {
      java.lang.Object ref = hint_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hint_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHintBytes() {
      java.lang.Object ref = hint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .Data_Node In_Data = 4;
    public static final int IN_DATA_FIELD_NUMBER = 4;
    private java.util.List<Aidebug.Data_Node> inData_;
    public java.util.List<Aidebug.Data_Node> getInDataList() {
      return inData_;
    }
    public java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
        getInDataOrBuilderList() {
      return inData_;
    }
    public int getInDataCount() {
      return inData_.size();
    }
    public Aidebug.Data_Node getInData(int index) {
      return inData_.get(index);
    }
    public Aidebug.Data_NodeOrBuilder getInDataOrBuilder(
        int index) {
      return inData_.get(index);
    }
    
    // repeated .Data_Node Out_Data = 5;
    public static final int OUT_DATA_FIELD_NUMBER = 5;
    private java.util.List<Aidebug.Data_Node> outData_;
    public java.util.List<Aidebug.Data_Node> getOutDataList() {
      return outData_;
    }
    public java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
        getOutDataOrBuilderList() {
      return outData_;
    }
    public int getOutDataCount() {
      return outData_.size();
    }
    public Aidebug.Data_Node getOutData(int index) {
      return outData_.get(index);
    }
    public Aidebug.Data_NodeOrBuilder getOutDataOrBuilder(
        int index) {
      return outData_.get(index);
    }
    
    // repeated .Data_Node Internal_Var = 6;
    public static final int INTERNAL_VAR_FIELD_NUMBER = 6;
    private java.util.List<Aidebug.Data_Node> internalVar_;
    public java.util.List<Aidebug.Data_Node> getInternalVarList() {
      return internalVar_;
    }
    public java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
        getInternalVarOrBuilderList() {
      return internalVar_;
    }
    public int getInternalVarCount() {
      return internalVar_.size();
    }
    public Aidebug.Data_Node getInternalVar(int index) {
      return internalVar_.get(index);
    }
    public Aidebug.Data_NodeOrBuilder getInternalVarOrBuilder(
        int index) {
      return internalVar_.get(index);
    }
    
    // required .Debug_Draw draw_data = 7;
    public static final int DRAW_DATA_FIELD_NUMBER = 7;
    private Aidebug.Debug_Draw drawData_;
    public boolean hasDrawData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public Aidebug.Debug_Draw getDrawData() {
      return drawData_;
    }
    public Aidebug.Debug_DrawOrBuilder getDrawDataOrBuilder() {
      return drawData_;
    }
    
    private void initFields() {
      name_ = "";
      category_ = "Uncategorised";
      hint_ = "";
      inData_ = java.util.Collections.emptyList();
      outData_ = java.util.Collections.emptyList();
      internalVar_ = java.util.Collections.emptyList();
      drawData_ = Aidebug.Debug_Draw.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDrawData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getInDataCount(); i++) {
        if (!getInData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOutDataCount(); i++) {
        if (!getOutData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getInternalVarCount(); i++) {
        if (!getInternalVar(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getDrawData().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCategoryBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHintBytes());
      }
      for (int i = 0; i < inData_.size(); i++) {
        output.writeMessage(4, inData_.get(i));
      }
      for (int i = 0; i < outData_.size(); i++) {
        output.writeMessage(5, outData_.get(i));
      }
      for (int i = 0; i < internalVar_.size(); i++) {
        output.writeMessage(6, internalVar_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(7, drawData_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCategoryBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHintBytes());
      }
      for (int i = 0; i < inData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, inData_.get(i));
      }
      for (int i = 0; i < outData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, outData_.get(i));
      }
      for (int i = 0; i < internalVar_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, internalVar_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, drawData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.Function_Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Function_Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Function_Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.Function_Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Function_Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Function_Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.Function_Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Function_Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.Function_Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.Function_Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.Function_Data prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.Function_DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_Function_Data_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_Function_Data_fieldAccessorTable;
      }
      
      // Construct using Aidebug.Function_Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInDataFieldBuilder();
          getOutDataFieldBuilder();
          getInternalVarFieldBuilder();
          getDrawDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        category_ = "Uncategorised";
        bitField0_ = (bitField0_ & ~0x00000002);
        hint_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (inDataBuilder_ == null) {
          inData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          inDataBuilder_.clear();
        }
        if (outDataBuilder_ == null) {
          outData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          outDataBuilder_.clear();
        }
        if (internalVarBuilder_ == null) {
          internalVar_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          internalVarBuilder_.clear();
        }
        if (drawDataBuilder_ == null) {
          drawData_ = Aidebug.Debug_Draw.getDefaultInstance();
        } else {
          drawDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.Function_Data.getDescriptor();
      }
      
      public Aidebug.Function_Data getDefaultInstanceForType() {
        return Aidebug.Function_Data.getDefaultInstance();
      }
      
      public Aidebug.Function_Data build() {
        Aidebug.Function_Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.Function_Data buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.Function_Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.Function_Data buildPartial() {
        Aidebug.Function_Data result = new Aidebug.Function_Data(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.category_ = category_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.hint_ = hint_;
        if (inDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            inData_ = java.util.Collections.unmodifiableList(inData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.inData_ = inData_;
        } else {
          result.inData_ = inDataBuilder_.build();
        }
        if (outDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            outData_ = java.util.Collections.unmodifiableList(outData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.outData_ = outData_;
        } else {
          result.outData_ = outDataBuilder_.build();
        }
        if (internalVarBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            internalVar_ = java.util.Collections.unmodifiableList(internalVar_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.internalVar_ = internalVar_;
        } else {
          result.internalVar_ = internalVarBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        if (drawDataBuilder_ == null) {
          result.drawData_ = drawData_;
        } else {
          result.drawData_ = drawDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.Function_Data) {
          return mergeFrom((Aidebug.Function_Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.Function_Data other) {
        if (other == Aidebug.Function_Data.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasCategory()) {
          setCategory(other.getCategory());
        }
        if (other.hasHint()) {
          setHint(other.getHint());
        }
        if (inDataBuilder_ == null) {
          if (!other.inData_.isEmpty()) {
            if (inData_.isEmpty()) {
              inData_ = other.inData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureInDataIsMutable();
              inData_.addAll(other.inData_);
            }
            onChanged();
          }
        } else {
          if (!other.inData_.isEmpty()) {
            if (inDataBuilder_.isEmpty()) {
              inDataBuilder_.dispose();
              inDataBuilder_ = null;
              inData_ = other.inData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              inDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInDataFieldBuilder() : null;
            } else {
              inDataBuilder_.addAllMessages(other.inData_);
            }
          }
        }
        if (outDataBuilder_ == null) {
          if (!other.outData_.isEmpty()) {
            if (outData_.isEmpty()) {
              outData_ = other.outData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOutDataIsMutable();
              outData_.addAll(other.outData_);
            }
            onChanged();
          }
        } else {
          if (!other.outData_.isEmpty()) {
            if (outDataBuilder_.isEmpty()) {
              outDataBuilder_.dispose();
              outDataBuilder_ = null;
              outData_ = other.outData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              outDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutDataFieldBuilder() : null;
            } else {
              outDataBuilder_.addAllMessages(other.outData_);
            }
          }
        }
        if (internalVarBuilder_ == null) {
          if (!other.internalVar_.isEmpty()) {
            if (internalVar_.isEmpty()) {
              internalVar_ = other.internalVar_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureInternalVarIsMutable();
              internalVar_.addAll(other.internalVar_);
            }
            onChanged();
          }
        } else {
          if (!other.internalVar_.isEmpty()) {
            if (internalVarBuilder_.isEmpty()) {
              internalVarBuilder_.dispose();
              internalVarBuilder_ = null;
              internalVar_ = other.internalVar_;
              bitField0_ = (bitField0_ & ~0x00000020);
              internalVarBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInternalVarFieldBuilder() : null;
            } else {
              internalVarBuilder_.addAllMessages(other.internalVar_);
            }
          }
        }
        if (other.hasDrawData()) {
          mergeDrawData(other.getDrawData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasDrawData()) {
          
          return false;
        }
        for (int i = 0; i < getInDataCount(); i++) {
          if (!getInData(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOutDataCount(); i++) {
          if (!getOutData(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getInternalVarCount(); i++) {
          if (!getInternalVar(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getDrawData().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              category_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              hint_ = input.readBytes();
              break;
            }
            case 34: {
              Aidebug.Data_Node.Builder subBuilder = Aidebug.Data_Node.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInData(subBuilder.buildPartial());
              break;
            }
            case 42: {
              Aidebug.Data_Node.Builder subBuilder = Aidebug.Data_Node.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addOutData(subBuilder.buildPartial());
              break;
            }
            case 50: {
              Aidebug.Data_Node.Builder subBuilder = Aidebug.Data_Node.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInternalVar(subBuilder.buildPartial());
              break;
            }
            case 58: {
              Aidebug.Debug_Draw.Builder subBuilder = Aidebug.Debug_Draw.newBuilder();
              if (hasDrawData()) {
                subBuilder.mergeFrom(getDrawData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDrawData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string category = 2 [default = "Uncategorised"];
      private java.lang.Object category_ = "Uncategorised";
      public boolean hasCategory() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getCategory() {
        java.lang.Object ref = category_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          category_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCategory(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        category_ = value;
        onChanged();
        return this;
      }
      public Builder clearCategory() {
        bitField0_ = (bitField0_ & ~0x00000002);
        category_ = getDefaultInstance().getCategory();
        onChanged();
        return this;
      }
      void setCategory(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        category_ = value;
        onChanged();
      }
      
      // optional string hint = 3;
      private java.lang.Object hint_ = "";
      public boolean hasHint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getHint() {
        java.lang.Object ref = hint_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hint_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHint(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        hint_ = value;
        onChanged();
        return this;
      }
      public Builder clearHint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hint_ = getDefaultInstance().getHint();
        onChanged();
        return this;
      }
      void setHint(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        hint_ = value;
        onChanged();
      }
      
      // repeated .Data_Node In_Data = 4;
      private java.util.List<Aidebug.Data_Node> inData_ =
        java.util.Collections.emptyList();
      private void ensureInDataIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          inData_ = new java.util.ArrayList<Aidebug.Data_Node>(inData_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder> inDataBuilder_;
      
      public java.util.List<Aidebug.Data_Node> getInDataList() {
        if (inDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inData_);
        } else {
          return inDataBuilder_.getMessageList();
        }
      }
      public int getInDataCount() {
        if (inDataBuilder_ == null) {
          return inData_.size();
        } else {
          return inDataBuilder_.getCount();
        }
      }
      public Aidebug.Data_Node getInData(int index) {
        if (inDataBuilder_ == null) {
          return inData_.get(index);
        } else {
          return inDataBuilder_.getMessage(index);
        }
      }
      public Builder setInData(
          int index, Aidebug.Data_Node value) {
        if (inDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInDataIsMutable();
          inData_.set(index, value);
          onChanged();
        } else {
          inDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setInData(
          int index, Aidebug.Data_Node.Builder builderForValue) {
        if (inDataBuilder_ == null) {
          ensureInDataIsMutable();
          inData_.set(index, builderForValue.build());
          onChanged();
        } else {
          inDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addInData(Aidebug.Data_Node value) {
        if (inDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInDataIsMutable();
          inData_.add(value);
          onChanged();
        } else {
          inDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addInData(
          int index, Aidebug.Data_Node value) {
        if (inDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInDataIsMutable();
          inData_.add(index, value);
          onChanged();
        } else {
          inDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addInData(
          Aidebug.Data_Node.Builder builderForValue) {
        if (inDataBuilder_ == null) {
          ensureInDataIsMutable();
          inData_.add(builderForValue.build());
          onChanged();
        } else {
          inDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addInData(
          int index, Aidebug.Data_Node.Builder builderForValue) {
        if (inDataBuilder_ == null) {
          ensureInDataIsMutable();
          inData_.add(index, builderForValue.build());
          onChanged();
        } else {
          inDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllInData(
          java.lang.Iterable<? extends Aidebug.Data_Node> values) {
        if (inDataBuilder_ == null) {
          ensureInDataIsMutable();
          super.addAll(values, inData_);
          onChanged();
        } else {
          inDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearInData() {
        if (inDataBuilder_ == null) {
          inData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          inDataBuilder_.clear();
        }
        return this;
      }
      public Builder removeInData(int index) {
        if (inDataBuilder_ == null) {
          ensureInDataIsMutable();
          inData_.remove(index);
          onChanged();
        } else {
          inDataBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Data_Node.Builder getInDataBuilder(
          int index) {
        return getInDataFieldBuilder().getBuilder(index);
      }
      public Aidebug.Data_NodeOrBuilder getInDataOrBuilder(
          int index) {
        if (inDataBuilder_ == null) {
          return inData_.get(index);  } else {
          return inDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
           getInDataOrBuilderList() {
        if (inDataBuilder_ != null) {
          return inDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inData_);
        }
      }
      public Aidebug.Data_Node.Builder addInDataBuilder() {
        return getInDataFieldBuilder().addBuilder(
            Aidebug.Data_Node.getDefaultInstance());
      }
      public Aidebug.Data_Node.Builder addInDataBuilder(
          int index) {
        return getInDataFieldBuilder().addBuilder(
            index, Aidebug.Data_Node.getDefaultInstance());
      }
      public java.util.List<Aidebug.Data_Node.Builder> 
           getInDataBuilderList() {
        return getInDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder> 
          getInDataFieldBuilder() {
        if (inDataBuilder_ == null) {
          inDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder>(
                  inData_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          inData_ = null;
        }
        return inDataBuilder_;
      }
      
      // repeated .Data_Node Out_Data = 5;
      private java.util.List<Aidebug.Data_Node> outData_ =
        java.util.Collections.emptyList();
      private void ensureOutDataIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          outData_ = new java.util.ArrayList<Aidebug.Data_Node>(outData_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder> outDataBuilder_;
      
      public java.util.List<Aidebug.Data_Node> getOutDataList() {
        if (outDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outData_);
        } else {
          return outDataBuilder_.getMessageList();
        }
      }
      public int getOutDataCount() {
        if (outDataBuilder_ == null) {
          return outData_.size();
        } else {
          return outDataBuilder_.getCount();
        }
      }
      public Aidebug.Data_Node getOutData(int index) {
        if (outDataBuilder_ == null) {
          return outData_.get(index);
        } else {
          return outDataBuilder_.getMessage(index);
        }
      }
      public Builder setOutData(
          int index, Aidebug.Data_Node value) {
        if (outDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutDataIsMutable();
          outData_.set(index, value);
          onChanged();
        } else {
          outDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setOutData(
          int index, Aidebug.Data_Node.Builder builderForValue) {
        if (outDataBuilder_ == null) {
          ensureOutDataIsMutable();
          outData_.set(index, builderForValue.build());
          onChanged();
        } else {
          outDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addOutData(Aidebug.Data_Node value) {
        if (outDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutDataIsMutable();
          outData_.add(value);
          onChanged();
        } else {
          outDataBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addOutData(
          int index, Aidebug.Data_Node value) {
        if (outDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutDataIsMutable();
          outData_.add(index, value);
          onChanged();
        } else {
          outDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addOutData(
          Aidebug.Data_Node.Builder builderForValue) {
        if (outDataBuilder_ == null) {
          ensureOutDataIsMutable();
          outData_.add(builderForValue.build());
          onChanged();
        } else {
          outDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addOutData(
          int index, Aidebug.Data_Node.Builder builderForValue) {
        if (outDataBuilder_ == null) {
          ensureOutDataIsMutable();
          outData_.add(index, builderForValue.build());
          onChanged();
        } else {
          outDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllOutData(
          java.lang.Iterable<? extends Aidebug.Data_Node> values) {
        if (outDataBuilder_ == null) {
          ensureOutDataIsMutable();
          super.addAll(values, outData_);
          onChanged();
        } else {
          outDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearOutData() {
        if (outDataBuilder_ == null) {
          outData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          outDataBuilder_.clear();
        }
        return this;
      }
      public Builder removeOutData(int index) {
        if (outDataBuilder_ == null) {
          ensureOutDataIsMutable();
          outData_.remove(index);
          onChanged();
        } else {
          outDataBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Data_Node.Builder getOutDataBuilder(
          int index) {
        return getOutDataFieldBuilder().getBuilder(index);
      }
      public Aidebug.Data_NodeOrBuilder getOutDataOrBuilder(
          int index) {
        if (outDataBuilder_ == null) {
          return outData_.get(index);  } else {
          return outDataBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
           getOutDataOrBuilderList() {
        if (outDataBuilder_ != null) {
          return outDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outData_);
        }
      }
      public Aidebug.Data_Node.Builder addOutDataBuilder() {
        return getOutDataFieldBuilder().addBuilder(
            Aidebug.Data_Node.getDefaultInstance());
      }
      public Aidebug.Data_Node.Builder addOutDataBuilder(
          int index) {
        return getOutDataFieldBuilder().addBuilder(
            index, Aidebug.Data_Node.getDefaultInstance());
      }
      public java.util.List<Aidebug.Data_Node.Builder> 
           getOutDataBuilderList() {
        return getOutDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder> 
          getOutDataFieldBuilder() {
        if (outDataBuilder_ == null) {
          outDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder>(
                  outData_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          outData_ = null;
        }
        return outDataBuilder_;
      }
      
      // repeated .Data_Node Internal_Var = 6;
      private java.util.List<Aidebug.Data_Node> internalVar_ =
        java.util.Collections.emptyList();
      private void ensureInternalVarIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          internalVar_ = new java.util.ArrayList<Aidebug.Data_Node>(internalVar_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder> internalVarBuilder_;
      
      public java.util.List<Aidebug.Data_Node> getInternalVarList() {
        if (internalVarBuilder_ == null) {
          return java.util.Collections.unmodifiableList(internalVar_);
        } else {
          return internalVarBuilder_.getMessageList();
        }
      }
      public int getInternalVarCount() {
        if (internalVarBuilder_ == null) {
          return internalVar_.size();
        } else {
          return internalVarBuilder_.getCount();
        }
      }
      public Aidebug.Data_Node getInternalVar(int index) {
        if (internalVarBuilder_ == null) {
          return internalVar_.get(index);
        } else {
          return internalVarBuilder_.getMessage(index);
        }
      }
      public Builder setInternalVar(
          int index, Aidebug.Data_Node value) {
        if (internalVarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInternalVarIsMutable();
          internalVar_.set(index, value);
          onChanged();
        } else {
          internalVarBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setInternalVar(
          int index, Aidebug.Data_Node.Builder builderForValue) {
        if (internalVarBuilder_ == null) {
          ensureInternalVarIsMutable();
          internalVar_.set(index, builderForValue.build());
          onChanged();
        } else {
          internalVarBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addInternalVar(Aidebug.Data_Node value) {
        if (internalVarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInternalVarIsMutable();
          internalVar_.add(value);
          onChanged();
        } else {
          internalVarBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addInternalVar(
          int index, Aidebug.Data_Node value) {
        if (internalVarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInternalVarIsMutable();
          internalVar_.add(index, value);
          onChanged();
        } else {
          internalVarBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addInternalVar(
          Aidebug.Data_Node.Builder builderForValue) {
        if (internalVarBuilder_ == null) {
          ensureInternalVarIsMutable();
          internalVar_.add(builderForValue.build());
          onChanged();
        } else {
          internalVarBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addInternalVar(
          int index, Aidebug.Data_Node.Builder builderForValue) {
        if (internalVarBuilder_ == null) {
          ensureInternalVarIsMutable();
          internalVar_.add(index, builderForValue.build());
          onChanged();
        } else {
          internalVarBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllInternalVar(
          java.lang.Iterable<? extends Aidebug.Data_Node> values) {
        if (internalVarBuilder_ == null) {
          ensureInternalVarIsMutable();
          super.addAll(values, internalVar_);
          onChanged();
        } else {
          internalVarBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearInternalVar() {
        if (internalVarBuilder_ == null) {
          internalVar_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          internalVarBuilder_.clear();
        }
        return this;
      }
      public Builder removeInternalVar(int index) {
        if (internalVarBuilder_ == null) {
          ensureInternalVarIsMutable();
          internalVar_.remove(index);
          onChanged();
        } else {
          internalVarBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Data_Node.Builder getInternalVarBuilder(
          int index) {
        return getInternalVarFieldBuilder().getBuilder(index);
      }
      public Aidebug.Data_NodeOrBuilder getInternalVarOrBuilder(
          int index) {
        if (internalVarBuilder_ == null) {
          return internalVar_.get(index);  } else {
          return internalVarBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Data_NodeOrBuilder> 
           getInternalVarOrBuilderList() {
        if (internalVarBuilder_ != null) {
          return internalVarBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(internalVar_);
        }
      }
      public Aidebug.Data_Node.Builder addInternalVarBuilder() {
        return getInternalVarFieldBuilder().addBuilder(
            Aidebug.Data_Node.getDefaultInstance());
      }
      public Aidebug.Data_Node.Builder addInternalVarBuilder(
          int index) {
        return getInternalVarFieldBuilder().addBuilder(
            index, Aidebug.Data_Node.getDefaultInstance());
      }
      public java.util.List<Aidebug.Data_Node.Builder> 
           getInternalVarBuilderList() {
        return getInternalVarFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder> 
          getInternalVarFieldBuilder() {
        if (internalVarBuilder_ == null) {
          internalVarBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Data_Node, Aidebug.Data_Node.Builder, Aidebug.Data_NodeOrBuilder>(
                  internalVar_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          internalVar_ = null;
        }
        return internalVarBuilder_;
      }
      
      // required .Debug_Draw draw_data = 7;
      private Aidebug.Debug_Draw drawData_ = Aidebug.Debug_Draw.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.Debug_Draw, Aidebug.Debug_Draw.Builder, Aidebug.Debug_DrawOrBuilder> drawDataBuilder_;
      public boolean hasDrawData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public Aidebug.Debug_Draw getDrawData() {
        if (drawDataBuilder_ == null) {
          return drawData_;
        } else {
          return drawDataBuilder_.getMessage();
        }
      }
      public Builder setDrawData(Aidebug.Debug_Draw value) {
        if (drawDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          drawData_ = value;
          onChanged();
        } else {
          drawDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setDrawData(
          Aidebug.Debug_Draw.Builder builderForValue) {
        if (drawDataBuilder_ == null) {
          drawData_ = builderForValue.build();
          onChanged();
        } else {
          drawDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeDrawData(Aidebug.Debug_Draw value) {
        if (drawDataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              drawData_ != Aidebug.Debug_Draw.getDefaultInstance()) {
            drawData_ =
              Aidebug.Debug_Draw.newBuilder(drawData_).mergeFrom(value).buildPartial();
          } else {
            drawData_ = value;
          }
          onChanged();
        } else {
          drawDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearDrawData() {
        if (drawDataBuilder_ == null) {
          drawData_ = Aidebug.Debug_Draw.getDefaultInstance();
          onChanged();
        } else {
          drawDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      public Aidebug.Debug_Draw.Builder getDrawDataBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getDrawDataFieldBuilder().getBuilder();
      }
      public Aidebug.Debug_DrawOrBuilder getDrawDataOrBuilder() {
        if (drawDataBuilder_ != null) {
          return drawDataBuilder_.getMessageOrBuilder();
        } else {
          return drawData_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Aidebug.Debug_Draw, Aidebug.Debug_Draw.Builder, Aidebug.Debug_DrawOrBuilder> 
          getDrawDataFieldBuilder() {
        if (drawDataBuilder_ == null) {
          drawDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Aidebug.Debug_Draw, Aidebug.Debug_Draw.Builder, Aidebug.Debug_DrawOrBuilder>(
                  drawData_,
                  getParentForChildren(),
                  isClean());
          drawData_ = null;
        }
        return drawDataBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Function_Data)
    }
    
    static {
      defaultInstance = new Function_Data(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Function_Data)
  }
  
  public interface AI_DebugOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 frame_id = 1;
    boolean hasFrameId();
    int getFrameId();
    
    // repeated .Function_Data func = 2;
    java.util.List<Aidebug.Function_Data> 
        getFuncList();
    Aidebug.Function_Data getFunc(int index);
    int getFuncCount();
    java.util.List<? extends Aidebug.Function_DataOrBuilder> 
        getFuncOrBuilderList();
    Aidebug.Function_DataOrBuilder getFuncOrBuilder(
        int index);
    
    // repeated .Debug_Point point = 3;
    java.util.List<Aidebug.Debug_Point> 
        getPointList();
    Aidebug.Debug_Point getPoint(int index);
    int getPointCount();
    java.util.List<? extends Aidebug.Debug_PointOrBuilder> 
        getPointOrBuilderList();
    Aidebug.Debug_PointOrBuilder getPointOrBuilder(
        int index);
    
    // repeated .Debug_Line line = 4;
    java.util.List<Aidebug.Debug_Line> 
        getLineList();
    Aidebug.Debug_Line getLine(int index);
    int getLineCount();
    java.util.List<? extends Aidebug.Debug_LineOrBuilder> 
        getLineOrBuilderList();
    Aidebug.Debug_LineOrBuilder getLineOrBuilder(
        int index);
    
    // repeated .Debug_Rect rect = 5;
    java.util.List<Aidebug.Debug_Rect> 
        getRectList();
    Aidebug.Debug_Rect getRect(int index);
    int getRectCount();
    java.util.List<? extends Aidebug.Debug_RectOrBuilder> 
        getRectOrBuilderList();
    Aidebug.Debug_RectOrBuilder getRectOrBuilder(
        int index);
    
    // repeated .Debug_Circle circle = 6;
    java.util.List<Aidebug.Debug_Circle> 
        getCircleList();
    Aidebug.Debug_Circle getCircle(int index);
    int getCircleCount();
    java.util.List<? extends Aidebug.Debug_CircleOrBuilder> 
        getCircleOrBuilderList();
    Aidebug.Debug_CircleOrBuilder getCircleOrBuilder(
        int index);
  }
  public static final class AI_Debug extends
      com.google.protobuf.GeneratedMessage
      implements AI_DebugOrBuilder {
    // Use AI_Debug.newBuilder() to construct.
    private AI_Debug(Builder builder) {
      super(builder);
    }
    private AI_Debug(boolean noInit) {}
    
    private static final AI_Debug defaultInstance;
    public static AI_Debug getDefaultInstance() {
      return defaultInstance;
    }
    
    public AI_Debug getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Aidebug.internal_static_AI_Debug_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Aidebug.internal_static_AI_Debug_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 frame_id = 1;
    public static final int FRAME_ID_FIELD_NUMBER = 1;
    private int frameId_;
    public boolean hasFrameId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getFrameId() {
      return frameId_;
    }
    
    // repeated .Function_Data func = 2;
    public static final int FUNC_FIELD_NUMBER = 2;
    private java.util.List<Aidebug.Function_Data> func_;
    public java.util.List<Aidebug.Function_Data> getFuncList() {
      return func_;
    }
    public java.util.List<? extends Aidebug.Function_DataOrBuilder> 
        getFuncOrBuilderList() {
      return func_;
    }
    public int getFuncCount() {
      return func_.size();
    }
    public Aidebug.Function_Data getFunc(int index) {
      return func_.get(index);
    }
    public Aidebug.Function_DataOrBuilder getFuncOrBuilder(
        int index) {
      return func_.get(index);
    }
    
    // repeated .Debug_Point point = 3;
    public static final int POINT_FIELD_NUMBER = 3;
    private java.util.List<Aidebug.Debug_Point> point_;
    public java.util.List<Aidebug.Debug_Point> getPointList() {
      return point_;
    }
    public java.util.List<? extends Aidebug.Debug_PointOrBuilder> 
        getPointOrBuilderList() {
      return point_;
    }
    public int getPointCount() {
      return point_.size();
    }
    public Aidebug.Debug_Point getPoint(int index) {
      return point_.get(index);
    }
    public Aidebug.Debug_PointOrBuilder getPointOrBuilder(
        int index) {
      return point_.get(index);
    }
    
    // repeated .Debug_Line line = 4;
    public static final int LINE_FIELD_NUMBER = 4;
    private java.util.List<Aidebug.Debug_Line> line_;
    public java.util.List<Aidebug.Debug_Line> getLineList() {
      return line_;
    }
    public java.util.List<? extends Aidebug.Debug_LineOrBuilder> 
        getLineOrBuilderList() {
      return line_;
    }
    public int getLineCount() {
      return line_.size();
    }
    public Aidebug.Debug_Line getLine(int index) {
      return line_.get(index);
    }
    public Aidebug.Debug_LineOrBuilder getLineOrBuilder(
        int index) {
      return line_.get(index);
    }
    
    // repeated .Debug_Rect rect = 5;
    public static final int RECT_FIELD_NUMBER = 5;
    private java.util.List<Aidebug.Debug_Rect> rect_;
    public java.util.List<Aidebug.Debug_Rect> getRectList() {
      return rect_;
    }
    public java.util.List<? extends Aidebug.Debug_RectOrBuilder> 
        getRectOrBuilderList() {
      return rect_;
    }
    public int getRectCount() {
      return rect_.size();
    }
    public Aidebug.Debug_Rect getRect(int index) {
      return rect_.get(index);
    }
    public Aidebug.Debug_RectOrBuilder getRectOrBuilder(
        int index) {
      return rect_.get(index);
    }
    
    // repeated .Debug_Circle circle = 6;
    public static final int CIRCLE_FIELD_NUMBER = 6;
    private java.util.List<Aidebug.Debug_Circle> circle_;
    public java.util.List<Aidebug.Debug_Circle> getCircleList() {
      return circle_;
    }
    public java.util.List<? extends Aidebug.Debug_CircleOrBuilder> 
        getCircleOrBuilderList() {
      return circle_;
    }
    public int getCircleCount() {
      return circle_.size();
    }
    public Aidebug.Debug_Circle getCircle(int index) {
      return circle_.get(index);
    }
    public Aidebug.Debug_CircleOrBuilder getCircleOrBuilder(
        int index) {
      return circle_.get(index);
    }
    
    private void initFields() {
      frameId_ = 0;
      func_ = java.util.Collections.emptyList();
      point_ = java.util.Collections.emptyList();
      line_ = java.util.Collections.emptyList();
      rect_ = java.util.Collections.emptyList();
      circle_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasFrameId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFuncCount(); i++) {
        if (!getFunc(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getPointCount(); i++) {
        if (!getPoint(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getLineCount(); i++) {
        if (!getLine(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRectCount(); i++) {
        if (!getRect(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCircleCount(); i++) {
        if (!getCircle(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, frameId_);
      }
      for (int i = 0; i < func_.size(); i++) {
        output.writeMessage(2, func_.get(i));
      }
      for (int i = 0; i < point_.size(); i++) {
        output.writeMessage(3, point_.get(i));
      }
      for (int i = 0; i < line_.size(); i++) {
        output.writeMessage(4, line_.get(i));
      }
      for (int i = 0; i < rect_.size(); i++) {
        output.writeMessage(5, rect_.get(i));
      }
      for (int i = 0; i < circle_.size(); i++) {
        output.writeMessage(6, circle_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, frameId_);
      }
      for (int i = 0; i < func_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, func_.get(i));
      }
      for (int i = 0; i < point_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, point_.get(i));
      }
      for (int i = 0; i < line_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, line_.get(i));
      }
      for (int i = 0; i < rect_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, rect_.get(i));
      }
      for (int i = 0; i < circle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, circle_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Aidebug.AI_Debug parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.AI_Debug parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.AI_Debug parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Aidebug.AI_Debug parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.AI_Debug parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.AI_Debug parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Aidebug.AI_Debug parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.AI_Debug parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Aidebug.AI_Debug parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Aidebug.AI_Debug parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Aidebug.AI_Debug prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Aidebug.AI_DebugOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Aidebug.internal_static_AI_Debug_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Aidebug.internal_static_AI_Debug_fieldAccessorTable;
      }
      
      // Construct using Aidebug.AI_Debug.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFuncFieldBuilder();
          getPointFieldBuilder();
          getLineFieldBuilder();
          getRectFieldBuilder();
          getCircleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        frameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (funcBuilder_ == null) {
          func_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          funcBuilder_.clear();
        }
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          pointBuilder_.clear();
        }
        if (lineBuilder_ == null) {
          line_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          lineBuilder_.clear();
        }
        if (rectBuilder_ == null) {
          rect_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          rectBuilder_.clear();
        }
        if (circleBuilder_ == null) {
          circle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          circleBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Aidebug.AI_Debug.getDescriptor();
      }
      
      public Aidebug.AI_Debug getDefaultInstanceForType() {
        return Aidebug.AI_Debug.getDefaultInstance();
      }
      
      public Aidebug.AI_Debug build() {
        Aidebug.AI_Debug result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Aidebug.AI_Debug buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Aidebug.AI_Debug result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Aidebug.AI_Debug buildPartial() {
        Aidebug.AI_Debug result = new Aidebug.AI_Debug(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frameId_ = frameId_;
        if (funcBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            func_ = java.util.Collections.unmodifiableList(func_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.func_ = func_;
        } else {
          result.func_ = funcBuilder_.build();
        }
        if (pointBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            point_ = java.util.Collections.unmodifiableList(point_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.point_ = point_;
        } else {
          result.point_ = pointBuilder_.build();
        }
        if (lineBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            line_ = java.util.Collections.unmodifiableList(line_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.line_ = line_;
        } else {
          result.line_ = lineBuilder_.build();
        }
        if (rectBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            rect_ = java.util.Collections.unmodifiableList(rect_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.rect_ = rect_;
        } else {
          result.rect_ = rectBuilder_.build();
        }
        if (circleBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            circle_ = java.util.Collections.unmodifiableList(circle_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.circle_ = circle_;
        } else {
          result.circle_ = circleBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Aidebug.AI_Debug) {
          return mergeFrom((Aidebug.AI_Debug)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Aidebug.AI_Debug other) {
        if (other == Aidebug.AI_Debug.getDefaultInstance()) return this;
        if (other.hasFrameId()) {
          setFrameId(other.getFrameId());
        }
        if (funcBuilder_ == null) {
          if (!other.func_.isEmpty()) {
            if (func_.isEmpty()) {
              func_ = other.func_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFuncIsMutable();
              func_.addAll(other.func_);
            }
            onChanged();
          }
        } else {
          if (!other.func_.isEmpty()) {
            if (funcBuilder_.isEmpty()) {
              funcBuilder_.dispose();
              funcBuilder_ = null;
              func_ = other.func_;
              bitField0_ = (bitField0_ & ~0x00000002);
              funcBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFuncFieldBuilder() : null;
            } else {
              funcBuilder_.addAllMessages(other.func_);
            }
          }
        }
        if (pointBuilder_ == null) {
          if (!other.point_.isEmpty()) {
            if (point_.isEmpty()) {
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePointIsMutable();
              point_.addAll(other.point_);
            }
            onChanged();
          }
        } else {
          if (!other.point_.isEmpty()) {
            if (pointBuilder_.isEmpty()) {
              pointBuilder_.dispose();
              pointBuilder_ = null;
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000004);
              pointBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPointFieldBuilder() : null;
            } else {
              pointBuilder_.addAllMessages(other.point_);
            }
          }
        }
        if (lineBuilder_ == null) {
          if (!other.line_.isEmpty()) {
            if (line_.isEmpty()) {
              line_ = other.line_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureLineIsMutable();
              line_.addAll(other.line_);
            }
            onChanged();
          }
        } else {
          if (!other.line_.isEmpty()) {
            if (lineBuilder_.isEmpty()) {
              lineBuilder_.dispose();
              lineBuilder_ = null;
              line_ = other.line_;
              bitField0_ = (bitField0_ & ~0x00000008);
              lineBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLineFieldBuilder() : null;
            } else {
              lineBuilder_.addAllMessages(other.line_);
            }
          }
        }
        if (rectBuilder_ == null) {
          if (!other.rect_.isEmpty()) {
            if (rect_.isEmpty()) {
              rect_ = other.rect_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRectIsMutable();
              rect_.addAll(other.rect_);
            }
            onChanged();
          }
        } else {
          if (!other.rect_.isEmpty()) {
            if (rectBuilder_.isEmpty()) {
              rectBuilder_.dispose();
              rectBuilder_ = null;
              rect_ = other.rect_;
              bitField0_ = (bitField0_ & ~0x00000010);
              rectBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRectFieldBuilder() : null;
            } else {
              rectBuilder_.addAllMessages(other.rect_);
            }
          }
        }
        if (circleBuilder_ == null) {
          if (!other.circle_.isEmpty()) {
            if (circle_.isEmpty()) {
              circle_ = other.circle_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCircleIsMutable();
              circle_.addAll(other.circle_);
            }
            onChanged();
          }
        } else {
          if (!other.circle_.isEmpty()) {
            if (circleBuilder_.isEmpty()) {
              circleBuilder_.dispose();
              circleBuilder_ = null;
              circle_ = other.circle_;
              bitField0_ = (bitField0_ & ~0x00000020);
              circleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCircleFieldBuilder() : null;
            } else {
              circleBuilder_.addAllMessages(other.circle_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasFrameId()) {
          
          return false;
        }
        for (int i = 0; i < getFuncCount(); i++) {
          if (!getFunc(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getPointCount(); i++) {
          if (!getPoint(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getLineCount(); i++) {
          if (!getLine(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRectCount(); i++) {
          if (!getRect(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCircleCount(); i++) {
          if (!getCircle(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              frameId_ = input.readUInt32();
              break;
            }
            case 18: {
              Aidebug.Function_Data.Builder subBuilder = Aidebug.Function_Data.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFunc(subBuilder.buildPartial());
              break;
            }
            case 26: {
              Aidebug.Debug_Point.Builder subBuilder = Aidebug.Debug_Point.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPoint(subBuilder.buildPartial());
              break;
            }
            case 34: {
              Aidebug.Debug_Line.Builder subBuilder = Aidebug.Debug_Line.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLine(subBuilder.buildPartial());
              break;
            }
            case 42: {
              Aidebug.Debug_Rect.Builder subBuilder = Aidebug.Debug_Rect.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRect(subBuilder.buildPartial());
              break;
            }
            case 50: {
              Aidebug.Debug_Circle.Builder subBuilder = Aidebug.Debug_Circle.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCircle(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 frame_id = 1;
      private int frameId_ ;
      public boolean hasFrameId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getFrameId() {
        return frameId_;
      }
      public Builder setFrameId(int value) {
        bitField0_ |= 0x00000001;
        frameId_ = value;
        onChanged();
        return this;
      }
      public Builder clearFrameId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frameId_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .Function_Data func = 2;
      private java.util.List<Aidebug.Function_Data> func_ =
        java.util.Collections.emptyList();
      private void ensureFuncIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          func_ = new java.util.ArrayList<Aidebug.Function_Data>(func_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Function_Data, Aidebug.Function_Data.Builder, Aidebug.Function_DataOrBuilder> funcBuilder_;
      
      public java.util.List<Aidebug.Function_Data> getFuncList() {
        if (funcBuilder_ == null) {
          return java.util.Collections.unmodifiableList(func_);
        } else {
          return funcBuilder_.getMessageList();
        }
      }
      public int getFuncCount() {
        if (funcBuilder_ == null) {
          return func_.size();
        } else {
          return funcBuilder_.getCount();
        }
      }
      public Aidebug.Function_Data getFunc(int index) {
        if (funcBuilder_ == null) {
          return func_.get(index);
        } else {
          return funcBuilder_.getMessage(index);
        }
      }
      public Builder setFunc(
          int index, Aidebug.Function_Data value) {
        if (funcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFuncIsMutable();
          func_.set(index, value);
          onChanged();
        } else {
          funcBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFunc(
          int index, Aidebug.Function_Data.Builder builderForValue) {
        if (funcBuilder_ == null) {
          ensureFuncIsMutable();
          func_.set(index, builderForValue.build());
          onChanged();
        } else {
          funcBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFunc(Aidebug.Function_Data value) {
        if (funcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFuncIsMutable();
          func_.add(value);
          onChanged();
        } else {
          funcBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFunc(
          int index, Aidebug.Function_Data value) {
        if (funcBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFuncIsMutable();
          func_.add(index, value);
          onChanged();
        } else {
          funcBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFunc(
          Aidebug.Function_Data.Builder builderForValue) {
        if (funcBuilder_ == null) {
          ensureFuncIsMutable();
          func_.add(builderForValue.build());
          onChanged();
        } else {
          funcBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFunc(
          int index, Aidebug.Function_Data.Builder builderForValue) {
        if (funcBuilder_ == null) {
          ensureFuncIsMutable();
          func_.add(index, builderForValue.build());
          onChanged();
        } else {
          funcBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFunc(
          java.lang.Iterable<? extends Aidebug.Function_Data> values) {
        if (funcBuilder_ == null) {
          ensureFuncIsMutable();
          super.addAll(values, func_);
          onChanged();
        } else {
          funcBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFunc() {
        if (funcBuilder_ == null) {
          func_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          funcBuilder_.clear();
        }
        return this;
      }
      public Builder removeFunc(int index) {
        if (funcBuilder_ == null) {
          ensureFuncIsMutable();
          func_.remove(index);
          onChanged();
        } else {
          funcBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Function_Data.Builder getFuncBuilder(
          int index) {
        return getFuncFieldBuilder().getBuilder(index);
      }
      public Aidebug.Function_DataOrBuilder getFuncOrBuilder(
          int index) {
        if (funcBuilder_ == null) {
          return func_.get(index);  } else {
          return funcBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Function_DataOrBuilder> 
           getFuncOrBuilderList() {
        if (funcBuilder_ != null) {
          return funcBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(func_);
        }
      }
      public Aidebug.Function_Data.Builder addFuncBuilder() {
        return getFuncFieldBuilder().addBuilder(
            Aidebug.Function_Data.getDefaultInstance());
      }
      public Aidebug.Function_Data.Builder addFuncBuilder(
          int index) {
        return getFuncFieldBuilder().addBuilder(
            index, Aidebug.Function_Data.getDefaultInstance());
      }
      public java.util.List<Aidebug.Function_Data.Builder> 
           getFuncBuilderList() {
        return getFuncFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Function_Data, Aidebug.Function_Data.Builder, Aidebug.Function_DataOrBuilder> 
          getFuncFieldBuilder() {
        if (funcBuilder_ == null) {
          funcBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Function_Data, Aidebug.Function_Data.Builder, Aidebug.Function_DataOrBuilder>(
                  func_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          func_ = null;
        }
        return funcBuilder_;
      }
      
      // repeated .Debug_Point point = 3;
      private java.util.List<Aidebug.Debug_Point> point_ =
        java.util.Collections.emptyList();
      private void ensurePointIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          point_ = new java.util.ArrayList<Aidebug.Debug_Point>(point_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Point, Aidebug.Debug_Point.Builder, Aidebug.Debug_PointOrBuilder> pointBuilder_;
      
      public java.util.List<Aidebug.Debug_Point> getPointList() {
        if (pointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(point_);
        } else {
          return pointBuilder_.getMessageList();
        }
      }
      public int getPointCount() {
        if (pointBuilder_ == null) {
          return point_.size();
        } else {
          return pointBuilder_.getCount();
        }
      }
      public Aidebug.Debug_Point getPoint(int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);
        } else {
          return pointBuilder_.getMessage(index);
        }
      }
      public Builder setPoint(
          int index, Aidebug.Debug_Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.set(index, value);
          onChanged();
        } else {
          pointBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setPoint(
          int index, Aidebug.Debug_Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addPoint(Aidebug.Debug_Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(value);
          onChanged();
        } else {
          pointBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addPoint(
          int index, Aidebug.Debug_Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(index, value);
          onChanged();
        } else {
          pointBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addPoint(
          Aidebug.Debug_Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addPoint(
          int index, Aidebug.Debug_Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllPoint(
          java.lang.Iterable<? extends Aidebug.Debug_Point> values) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          super.addAll(values, point_);
          onChanged();
        } else {
          pointBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearPoint() {
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          pointBuilder_.clear();
        }
        return this;
      }
      public Builder removePoint(int index) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.remove(index);
          onChanged();
        } else {
          pointBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Debug_Point.Builder getPointBuilder(
          int index) {
        return getPointFieldBuilder().getBuilder(index);
      }
      public Aidebug.Debug_PointOrBuilder getPointOrBuilder(
          int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);  } else {
          return pointBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Debug_PointOrBuilder> 
           getPointOrBuilderList() {
        if (pointBuilder_ != null) {
          return pointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(point_);
        }
      }
      public Aidebug.Debug_Point.Builder addPointBuilder() {
        return getPointFieldBuilder().addBuilder(
            Aidebug.Debug_Point.getDefaultInstance());
      }
      public Aidebug.Debug_Point.Builder addPointBuilder(
          int index) {
        return getPointFieldBuilder().addBuilder(
            index, Aidebug.Debug_Point.getDefaultInstance());
      }
      public java.util.List<Aidebug.Debug_Point.Builder> 
           getPointBuilderList() {
        return getPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Point, Aidebug.Debug_Point.Builder, Aidebug.Debug_PointOrBuilder> 
          getPointFieldBuilder() {
        if (pointBuilder_ == null) {
          pointBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Debug_Point, Aidebug.Debug_Point.Builder, Aidebug.Debug_PointOrBuilder>(
                  point_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          point_ = null;
        }
        return pointBuilder_;
      }
      
      // repeated .Debug_Line line = 4;
      private java.util.List<Aidebug.Debug_Line> line_ =
        java.util.Collections.emptyList();
      private void ensureLineIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          line_ = new java.util.ArrayList<Aidebug.Debug_Line>(line_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Line, Aidebug.Debug_Line.Builder, Aidebug.Debug_LineOrBuilder> lineBuilder_;
      
      public java.util.List<Aidebug.Debug_Line> getLineList() {
        if (lineBuilder_ == null) {
          return java.util.Collections.unmodifiableList(line_);
        } else {
          return lineBuilder_.getMessageList();
        }
      }
      public int getLineCount() {
        if (lineBuilder_ == null) {
          return line_.size();
        } else {
          return lineBuilder_.getCount();
        }
      }
      public Aidebug.Debug_Line getLine(int index) {
        if (lineBuilder_ == null) {
          return line_.get(index);
        } else {
          return lineBuilder_.getMessage(index);
        }
      }
      public Builder setLine(
          int index, Aidebug.Debug_Line value) {
        if (lineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineIsMutable();
          line_.set(index, value);
          onChanged();
        } else {
          lineBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setLine(
          int index, Aidebug.Debug_Line.Builder builderForValue) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          line_.set(index, builderForValue.build());
          onChanged();
        } else {
          lineBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addLine(Aidebug.Debug_Line value) {
        if (lineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineIsMutable();
          line_.add(value);
          onChanged();
        } else {
          lineBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addLine(
          int index, Aidebug.Debug_Line value) {
        if (lineBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineIsMutable();
          line_.add(index, value);
          onChanged();
        } else {
          lineBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addLine(
          Aidebug.Debug_Line.Builder builderForValue) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          line_.add(builderForValue.build());
          onChanged();
        } else {
          lineBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addLine(
          int index, Aidebug.Debug_Line.Builder builderForValue) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          line_.add(index, builderForValue.build());
          onChanged();
        } else {
          lineBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllLine(
          java.lang.Iterable<? extends Aidebug.Debug_Line> values) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          super.addAll(values, line_);
          onChanged();
        } else {
          lineBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearLine() {
        if (lineBuilder_ == null) {
          line_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          lineBuilder_.clear();
        }
        return this;
      }
      public Builder removeLine(int index) {
        if (lineBuilder_ == null) {
          ensureLineIsMutable();
          line_.remove(index);
          onChanged();
        } else {
          lineBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Debug_Line.Builder getLineBuilder(
          int index) {
        return getLineFieldBuilder().getBuilder(index);
      }
      public Aidebug.Debug_LineOrBuilder getLineOrBuilder(
          int index) {
        if (lineBuilder_ == null) {
          return line_.get(index);  } else {
          return lineBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Debug_LineOrBuilder> 
           getLineOrBuilderList() {
        if (lineBuilder_ != null) {
          return lineBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(line_);
        }
      }
      public Aidebug.Debug_Line.Builder addLineBuilder() {
        return getLineFieldBuilder().addBuilder(
            Aidebug.Debug_Line.getDefaultInstance());
      }
      public Aidebug.Debug_Line.Builder addLineBuilder(
          int index) {
        return getLineFieldBuilder().addBuilder(
            index, Aidebug.Debug_Line.getDefaultInstance());
      }
      public java.util.List<Aidebug.Debug_Line.Builder> 
           getLineBuilderList() {
        return getLineFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Line, Aidebug.Debug_Line.Builder, Aidebug.Debug_LineOrBuilder> 
          getLineFieldBuilder() {
        if (lineBuilder_ == null) {
          lineBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Debug_Line, Aidebug.Debug_Line.Builder, Aidebug.Debug_LineOrBuilder>(
                  line_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          line_ = null;
        }
        return lineBuilder_;
      }
      
      // repeated .Debug_Rect rect = 5;
      private java.util.List<Aidebug.Debug_Rect> rect_ =
        java.util.Collections.emptyList();
      private void ensureRectIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          rect_ = new java.util.ArrayList<Aidebug.Debug_Rect>(rect_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Rect, Aidebug.Debug_Rect.Builder, Aidebug.Debug_RectOrBuilder> rectBuilder_;
      
      public java.util.List<Aidebug.Debug_Rect> getRectList() {
        if (rectBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rect_);
        } else {
          return rectBuilder_.getMessageList();
        }
      }
      public int getRectCount() {
        if (rectBuilder_ == null) {
          return rect_.size();
        } else {
          return rectBuilder_.getCount();
        }
      }
      public Aidebug.Debug_Rect getRect(int index) {
        if (rectBuilder_ == null) {
          return rect_.get(index);
        } else {
          return rectBuilder_.getMessage(index);
        }
      }
      public Builder setRect(
          int index, Aidebug.Debug_Rect value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.set(index, value);
          onChanged();
        } else {
          rectBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRect(
          int index, Aidebug.Debug_Rect.Builder builderForValue) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          rect_.set(index, builderForValue.build());
          onChanged();
        } else {
          rectBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRect(Aidebug.Debug_Rect value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.add(value);
          onChanged();
        } else {
          rectBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRect(
          int index, Aidebug.Debug_Rect value) {
        if (rectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRectIsMutable();
          rect_.add(index, value);
          onChanged();
        } else {
          rectBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRect(
          Aidebug.Debug_Rect.Builder builderForValue) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          rect_.add(builderForValue.build());
          onChanged();
        } else {
          rectBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRect(
          int index, Aidebug.Debug_Rect.Builder builderForValue) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          rect_.add(index, builderForValue.build());
          onChanged();
        } else {
          rectBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRect(
          java.lang.Iterable<? extends Aidebug.Debug_Rect> values) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          super.addAll(values, rect_);
          onChanged();
        } else {
          rectBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRect() {
        if (rectBuilder_ == null) {
          rect_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          rectBuilder_.clear();
        }
        return this;
      }
      public Builder removeRect(int index) {
        if (rectBuilder_ == null) {
          ensureRectIsMutable();
          rect_.remove(index);
          onChanged();
        } else {
          rectBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Debug_Rect.Builder getRectBuilder(
          int index) {
        return getRectFieldBuilder().getBuilder(index);
      }
      public Aidebug.Debug_RectOrBuilder getRectOrBuilder(
          int index) {
        if (rectBuilder_ == null) {
          return rect_.get(index);  } else {
          return rectBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Debug_RectOrBuilder> 
           getRectOrBuilderList() {
        if (rectBuilder_ != null) {
          return rectBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rect_);
        }
      }
      public Aidebug.Debug_Rect.Builder addRectBuilder() {
        return getRectFieldBuilder().addBuilder(
            Aidebug.Debug_Rect.getDefaultInstance());
      }
      public Aidebug.Debug_Rect.Builder addRectBuilder(
          int index) {
        return getRectFieldBuilder().addBuilder(
            index, Aidebug.Debug_Rect.getDefaultInstance());
      }
      public java.util.List<Aidebug.Debug_Rect.Builder> 
           getRectBuilderList() {
        return getRectFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Rect, Aidebug.Debug_Rect.Builder, Aidebug.Debug_RectOrBuilder> 
          getRectFieldBuilder() {
        if (rectBuilder_ == null) {
          rectBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Debug_Rect, Aidebug.Debug_Rect.Builder, Aidebug.Debug_RectOrBuilder>(
                  rect_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          rect_ = null;
        }
        return rectBuilder_;
      }
      
      // repeated .Debug_Circle circle = 6;
      private java.util.List<Aidebug.Debug_Circle> circle_ =
        java.util.Collections.emptyList();
      private void ensureCircleIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          circle_ = new java.util.ArrayList<Aidebug.Debug_Circle>(circle_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Circle, Aidebug.Debug_Circle.Builder, Aidebug.Debug_CircleOrBuilder> circleBuilder_;
      
      public java.util.List<Aidebug.Debug_Circle> getCircleList() {
        if (circleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(circle_);
        } else {
          return circleBuilder_.getMessageList();
        }
      }
      public int getCircleCount() {
        if (circleBuilder_ == null) {
          return circle_.size();
        } else {
          return circleBuilder_.getCount();
        }
      }
      public Aidebug.Debug_Circle getCircle(int index) {
        if (circleBuilder_ == null) {
          return circle_.get(index);
        } else {
          return circleBuilder_.getMessage(index);
        }
      }
      public Builder setCircle(
          int index, Aidebug.Debug_Circle value) {
        if (circleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCircleIsMutable();
          circle_.set(index, value);
          onChanged();
        } else {
          circleBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCircle(
          int index, Aidebug.Debug_Circle.Builder builderForValue) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          circle_.set(index, builderForValue.build());
          onChanged();
        } else {
          circleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCircle(Aidebug.Debug_Circle value) {
        if (circleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCircleIsMutable();
          circle_.add(value);
          onChanged();
        } else {
          circleBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCircle(
          int index, Aidebug.Debug_Circle value) {
        if (circleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCircleIsMutable();
          circle_.add(index, value);
          onChanged();
        } else {
          circleBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCircle(
          Aidebug.Debug_Circle.Builder builderForValue) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          circle_.add(builderForValue.build());
          onChanged();
        } else {
          circleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCircle(
          int index, Aidebug.Debug_Circle.Builder builderForValue) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          circle_.add(index, builderForValue.build());
          onChanged();
        } else {
          circleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCircle(
          java.lang.Iterable<? extends Aidebug.Debug_Circle> values) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          super.addAll(values, circle_);
          onChanged();
        } else {
          circleBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCircle() {
        if (circleBuilder_ == null) {
          circle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          circleBuilder_.clear();
        }
        return this;
      }
      public Builder removeCircle(int index) {
        if (circleBuilder_ == null) {
          ensureCircleIsMutable();
          circle_.remove(index);
          onChanged();
        } else {
          circleBuilder_.remove(index);
        }
        return this;
      }
      public Aidebug.Debug_Circle.Builder getCircleBuilder(
          int index) {
        return getCircleFieldBuilder().getBuilder(index);
      }
      public Aidebug.Debug_CircleOrBuilder getCircleOrBuilder(
          int index) {
        if (circleBuilder_ == null) {
          return circle_.get(index);  } else {
          return circleBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends Aidebug.Debug_CircleOrBuilder> 
           getCircleOrBuilderList() {
        if (circleBuilder_ != null) {
          return circleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(circle_);
        }
      }
      public Aidebug.Debug_Circle.Builder addCircleBuilder() {
        return getCircleFieldBuilder().addBuilder(
            Aidebug.Debug_Circle.getDefaultInstance());
      }
      public Aidebug.Debug_Circle.Builder addCircleBuilder(
          int index) {
        return getCircleFieldBuilder().addBuilder(
            index, Aidebug.Debug_Circle.getDefaultInstance());
      }
      public java.util.List<Aidebug.Debug_Circle.Builder> 
           getCircleBuilderList() {
        return getCircleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Aidebug.Debug_Circle, Aidebug.Debug_Circle.Builder, Aidebug.Debug_CircleOrBuilder> 
          getCircleFieldBuilder() {
        if (circleBuilder_ == null) {
          circleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Aidebug.Debug_Circle, Aidebug.Debug_Circle.Builder, Aidebug.Debug_CircleOrBuilder>(
                  circle_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          circle_ = null;
        }
        return circleBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:AI_Debug)
    }
    
    static {
      defaultInstance = new AI_Debug(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AI_Debug)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_color_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_color_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Debug_Point_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Debug_Point_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Debug_Line_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Debug_Line_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Debug_Rect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Debug_Rect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Debug_Circle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Debug_Circle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Data_Node_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Data_Node_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Debug_Draw_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Debug_Draw_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Function_Data_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Function_Data_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AI_Debug_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AI_Debug_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\raidebug.proto\"(\n\005color\022\t\n\001r\030\001 \002(\002\022\t\n\001g" +
      "\030\002 \002(\002\022\t\n\001b\030\003 \002(\002\"8\n\013Debug_Point\022\t\n\001x\030\001 " +
      "\002(\002\022\t\n\001y\030\002 \002(\002\022\023\n\003col\030\003 \001(\0132\006.color\"Q\n\nD" +
      "ebug_Line\022\n\n\002x1\030\001 \002(\002\022\n\n\002y1\030\002 \002(\002\022\n\n\002x2\030" +
      "\003 \002(\002\022\n\n\002y2\030\004 \002(\002\022\023\n\003col\030\005 \001(\0132\006.color\"M" +
      "\n\nDebug_Rect\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001w\030" +
      "\003 \002(\002\022\t\n\001h\030\004 \002(\002\022\023\n\003col\030\005 \001(\0132\006.color\"D\n" +
      "\014Debug_Circle\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001r" +
      "\030\003 \002(\002\022\023\n\003col\030\004 \001(\0132\006.color\"O\n\tData_Node" +
      "\022\014\n\004name\030\001 \002(\t\022\030\n\004type\030\002 \002(\0162\n.Data_Type",
      "\022\014\n\004data\030\003 \002(\t\022\014\n\004hint\030\004 \001(\t\"~\n\nDebug_Dr" +
      "aw\022\033\n\005point\030\001 \003(\0132\014.Debug_Point\022\031\n\004line\030" +
      "\002 \003(\0132\013.Debug_Line\022\031\n\004rect\030\003 \003(\0132\013.Debug" +
      "_Rect\022\035\n\006circle\030\004 \003(\0132\r.Debug_Circle\"\311\001\n" +
      "\rFunction_Data\022\014\n\004name\030\001 \002(\t\022\037\n\010category" +
      "\030\002 \001(\t:\rUncategorised\022\014\n\004hint\030\003 \001(\t\022\033\n\007I" +
      "n_Data\030\004 \003(\0132\n.Data_Node\022\034\n\010Out_Data\030\005 \003" +
      "(\0132\n.Data_Node\022 \n\014Internal_Var\030\006 \003(\0132\n.D" +
      "ata_Node\022\036\n\tdraw_data\030\007 \002(\0132\013.Debug_Draw" +
      "\"\254\001\n\010AI_Debug\022\020\n\010frame_id\030\001 \002(\r\022\034\n\004func\030",
      "\002 \003(\0132\016.Function_Data\022\033\n\005point\030\003 \003(\0132\014.D" +
      "ebug_Point\022\031\n\004line\030\004 \003(\0132\013.Debug_Line\022\031\n" +
      "\004rect\030\005 \003(\0132\013.Debug_Rect\022\035\n\006circle\030\006 \003(\013" +
      "2\r.Debug_Circle*}\n\tData_Type\022\014\n\010imm_bool" +
      "\020\000\022\r\n\timm_short\020\001\022\013\n\007imm_int\020\002\022\r\n\timm_fl" +
      "oat\020\003\022\016\n\nimm_double\020\004\022\014\n\010imm_vec2\020\005\022\014\n\010i" +
      "mm_vec3\020\006\022\013\n\007imm_str\020\007"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_color_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_color_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_color_descriptor,
              new java.lang.String[] { "R", "G", "B", },
              Aidebug.color.class,
              Aidebug.color.Builder.class);
          internal_static_Debug_Point_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Debug_Point_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Debug_Point_descriptor,
              new java.lang.String[] { "X", "Y", "Col", },
              Aidebug.Debug_Point.class,
              Aidebug.Debug_Point.Builder.class);
          internal_static_Debug_Line_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Debug_Line_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Debug_Line_descriptor,
              new java.lang.String[] { "X1", "Y1", "X2", "Y2", "Col", },
              Aidebug.Debug_Line.class,
              Aidebug.Debug_Line.Builder.class);
          internal_static_Debug_Rect_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_Debug_Rect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Debug_Rect_descriptor,
              new java.lang.String[] { "X", "Y", "W", "H", "Col", },
              Aidebug.Debug_Rect.class,
              Aidebug.Debug_Rect.Builder.class);
          internal_static_Debug_Circle_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_Debug_Circle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Debug_Circle_descriptor,
              new java.lang.String[] { "X", "Y", "R", "Col", },
              Aidebug.Debug_Circle.class,
              Aidebug.Debug_Circle.Builder.class);
          internal_static_Data_Node_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_Data_Node_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Data_Node_descriptor,
              new java.lang.String[] { "Name", "Type", "Data", "Hint", },
              Aidebug.Data_Node.class,
              Aidebug.Data_Node.Builder.class);
          internal_static_Debug_Draw_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_Debug_Draw_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Debug_Draw_descriptor,
              new java.lang.String[] { "Point", "Line", "Rect", "Circle", },
              Aidebug.Debug_Draw.class,
              Aidebug.Debug_Draw.Builder.class);
          internal_static_Function_Data_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_Function_Data_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Function_Data_descriptor,
              new java.lang.String[] { "Name", "Category", "Hint", "InData", "OutData", "InternalVar", "DrawData", },
              Aidebug.Function_Data.class,
              Aidebug.Function_Data.Builder.class);
          internal_static_AI_Debug_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_AI_Debug_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AI_Debug_descriptor,
              new java.lang.String[] { "FrameId", "Func", "Point", "Line", "Rect", "Circle", },
              Aidebug.AI_Debug.class,
              Aidebug.AI_Debug.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
