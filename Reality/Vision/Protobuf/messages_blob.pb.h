// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_blob.proto

#ifndef PROTOBUF_messages_5fblob_2eproto__INCLUDED
#define PROTOBUF_messages_5fblob_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_messages_5fblob_2eproto();
void protobuf_AssignDesc_messages_5fblob_2eproto();
void protobuf_ShutdownFile_messages_5fblob_2eproto();

class LHP_Blob;
class LHP_Frame;

// ===================================================================

class LHP_Blob : public ::google::protobuf::Message {
 public:
  LHP_Blob();
  virtual ~LHP_Blob();

  LHP_Blob(const LHP_Blob& from);

  inline LHP_Blob& operator=(const LHP_Blob& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LHP_Blob& default_instance();

  void Swap(LHP_Blob* other);

  // implements Message ----------------------------------------------

  LHP_Blob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LHP_Blob& from);
  void MergeFrom(const LHP_Blob& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 color = 1;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 1;
  inline ::google::protobuf::uint32 color() const;
  inline void set_color(::google::protobuf::uint32 value);

  // required float x1 = 2;
  inline bool has_x1() const;
  inline void clear_x1();
  static const int kX1FieldNumber = 2;
  inline float x1() const;
  inline void set_x1(float value);

  // required float y1 = 3;
  inline bool has_y1() const;
  inline void clear_y1();
  static const int kY1FieldNumber = 3;
  inline float y1() const;
  inline void set_y1(float value);

  // required float x2 = 4;
  inline bool has_x2() const;
  inline void clear_x2();
  static const int kX2FieldNumber = 4;
  inline float x2() const;
  inline void set_x2(float value);

  // required float y2 = 5;
  inline bool has_y2() const;
  inline void clear_y2();
  static const int kY2FieldNumber = 5;
  inline float y2() const;
  inline void set_y2(float value);

  // optional float cen_x = 6;
  inline bool has_cen_x() const;
  inline void clear_cen_x();
  static const int kCenXFieldNumber = 6;
  inline float cen_x() const;
  inline void set_cen_x(float value);

  // optional float cen_y = 7;
  inline bool has_cen_y() const;
  inline void clear_cen_y();
  static const int kCenYFieldNumber = 7;
  inline float cen_y() const;
  inline void set_cen_y(float value);

  // optional uint32 bb_area = 8;
  inline bool has_bb_area() const;
  inline void clear_bb_area();
  static const int kBbAreaFieldNumber = 8;
  inline ::google::protobuf::uint32 bb_area() const;
  inline void set_bb_area(::google::protobuf::uint32 value);

  // optional uint32 area = 9;
  inline bool has_area() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 9;
  inline ::google::protobuf::uint32 area() const;
  inline void set_area(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LHP_Blob)
 private:
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_x1();
  inline void clear_has_x1();
  inline void set_has_y1();
  inline void clear_has_y1();
  inline void set_has_x2();
  inline void clear_has_x2();
  inline void set_has_y2();
  inline void clear_has_y2();
  inline void set_has_cen_x();
  inline void clear_has_cen_x();
  inline void set_has_cen_y();
  inline void clear_has_cen_y();
  inline void set_has_bb_area();
  inline void clear_has_bb_area();
  inline void set_has_area();
  inline void clear_has_area();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 color_;
  float x1_;
  float y1_;
  float x2_;
  float y2_;
  float cen_x_;
  float cen_y_;
  ::google::protobuf::uint32 bb_area_;
  ::google::protobuf::uint32 area_;
  friend void  protobuf_AddDesc_messages_5fblob_2eproto();
  friend void protobuf_AssignDesc_messages_5fblob_2eproto();
  friend void protobuf_ShutdownFile_messages_5fblob_2eproto();

  void InitAsDefaultInstance();
  static LHP_Blob* default_instance_;
};
// -------------------------------------------------------------------

class LHP_Frame : public ::google::protobuf::Message {
 public:
  LHP_Frame();
  virtual ~LHP_Frame();

  LHP_Frame(const LHP_Frame& from);

  inline LHP_Frame& operator=(const LHP_Frame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LHP_Frame& default_instance();

  void Swap(LHP_Frame* other);

  // implements Message ----------------------------------------------

  LHP_Frame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LHP_Frame& from);
  void MergeFrom(const LHP_Frame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 frame_number = 1;
  inline bool has_frame_number() const;
  inline void clear_frame_number();
  static const int kFrameNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 frame_number() const;
  inline void set_frame_number(::google::protobuf::uint32 value);

  // required uint32 camera_id = 4;
  inline bool has_camera_id() const;
  inline void clear_camera_id();
  static const int kCameraIdFieldNumber = 4;
  inline ::google::protobuf::uint32 camera_id() const;
  inline void set_camera_id(::google::protobuf::uint32 value);

  // repeated .LHP_Blob blob = 5;
  inline int blob_size() const;
  inline void clear_blob();
  static const int kBlobFieldNumber = 5;
  inline const ::LHP_Blob& blob(int index) const;
  inline ::LHP_Blob* mutable_blob(int index);
  inline ::LHP_Blob* add_blob();
  inline const ::google::protobuf::RepeatedPtrField< ::LHP_Blob >&
      blob() const;
  inline ::google::protobuf::RepeatedPtrField< ::LHP_Blob >*
      mutable_blob();

  // @@protoc_insertion_point(class_scope:LHP_Frame)
 private:
  inline void set_has_frame_number();
  inline void clear_has_frame_number();
  inline void set_has_camera_id();
  inline void clear_has_camera_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 frame_number_;
  ::google::protobuf::uint32 camera_id_;
  ::google::protobuf::RepeatedPtrField< ::LHP_Blob > blob_;
  friend void  protobuf_AddDesc_messages_5fblob_2eproto();
  friend void protobuf_AssignDesc_messages_5fblob_2eproto();
  friend void protobuf_ShutdownFile_messages_5fblob_2eproto();

  void InitAsDefaultInstance();
  static LHP_Frame* default_instance_;
};
// ===================================================================


// ===================================================================

// LHP_Blob

// required uint32 color = 1;
inline bool LHP_Blob::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LHP_Blob::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LHP_Blob::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LHP_Blob::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 LHP_Blob::color() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.color)
  return color_;
}
inline void LHP_Blob::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.color)
}

// required float x1 = 2;
inline bool LHP_Blob::has_x1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LHP_Blob::set_has_x1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LHP_Blob::clear_has_x1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LHP_Blob::clear_x1() {
  x1_ = 0;
  clear_has_x1();
}
inline float LHP_Blob::x1() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.x1)
  return x1_;
}
inline void LHP_Blob::set_x1(float value) {
  set_has_x1();
  x1_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.x1)
}

// required float y1 = 3;
inline bool LHP_Blob::has_y1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LHP_Blob::set_has_y1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LHP_Blob::clear_has_y1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LHP_Blob::clear_y1() {
  y1_ = 0;
  clear_has_y1();
}
inline float LHP_Blob::y1() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.y1)
  return y1_;
}
inline void LHP_Blob::set_y1(float value) {
  set_has_y1();
  y1_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.y1)
}

// required float x2 = 4;
inline bool LHP_Blob::has_x2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LHP_Blob::set_has_x2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LHP_Blob::clear_has_x2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LHP_Blob::clear_x2() {
  x2_ = 0;
  clear_has_x2();
}
inline float LHP_Blob::x2() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.x2)
  return x2_;
}
inline void LHP_Blob::set_x2(float value) {
  set_has_x2();
  x2_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.x2)
}

// required float y2 = 5;
inline bool LHP_Blob::has_y2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LHP_Blob::set_has_y2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LHP_Blob::clear_has_y2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LHP_Blob::clear_y2() {
  y2_ = 0;
  clear_has_y2();
}
inline float LHP_Blob::y2() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.y2)
  return y2_;
}
inline void LHP_Blob::set_y2(float value) {
  set_has_y2();
  y2_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.y2)
}

// optional float cen_x = 6;
inline bool LHP_Blob::has_cen_x() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LHP_Blob::set_has_cen_x() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LHP_Blob::clear_has_cen_x() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LHP_Blob::clear_cen_x() {
  cen_x_ = 0;
  clear_has_cen_x();
}
inline float LHP_Blob::cen_x() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.cen_x)
  return cen_x_;
}
inline void LHP_Blob::set_cen_x(float value) {
  set_has_cen_x();
  cen_x_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.cen_x)
}

// optional float cen_y = 7;
inline bool LHP_Blob::has_cen_y() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LHP_Blob::set_has_cen_y() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LHP_Blob::clear_has_cen_y() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LHP_Blob::clear_cen_y() {
  cen_y_ = 0;
  clear_has_cen_y();
}
inline float LHP_Blob::cen_y() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.cen_y)
  return cen_y_;
}
inline void LHP_Blob::set_cen_y(float value) {
  set_has_cen_y();
  cen_y_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.cen_y)
}

// optional uint32 bb_area = 8;
inline bool LHP_Blob::has_bb_area() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LHP_Blob::set_has_bb_area() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LHP_Blob::clear_has_bb_area() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LHP_Blob::clear_bb_area() {
  bb_area_ = 0u;
  clear_has_bb_area();
}
inline ::google::protobuf::uint32 LHP_Blob::bb_area() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.bb_area)
  return bb_area_;
}
inline void LHP_Blob::set_bb_area(::google::protobuf::uint32 value) {
  set_has_bb_area();
  bb_area_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.bb_area)
}

// optional uint32 area = 9;
inline bool LHP_Blob::has_area() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LHP_Blob::set_has_area() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LHP_Blob::clear_has_area() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LHP_Blob::clear_area() {
  area_ = 0u;
  clear_has_area();
}
inline ::google::protobuf::uint32 LHP_Blob::area() const {
  // @@protoc_insertion_point(field_get:LHP_Blob.area)
  return area_;
}
inline void LHP_Blob::set_area(::google::protobuf::uint32 value) {
  set_has_area();
  area_ = value;
  // @@protoc_insertion_point(field_set:LHP_Blob.area)
}

// -------------------------------------------------------------------

// LHP_Frame

// required uint32 frame_number = 1;
inline bool LHP_Frame::has_frame_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LHP_Frame::set_has_frame_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LHP_Frame::clear_has_frame_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LHP_Frame::clear_frame_number() {
  frame_number_ = 0u;
  clear_has_frame_number();
}
inline ::google::protobuf::uint32 LHP_Frame::frame_number() const {
  // @@protoc_insertion_point(field_get:LHP_Frame.frame_number)
  return frame_number_;
}
inline void LHP_Frame::set_frame_number(::google::protobuf::uint32 value) {
  set_has_frame_number();
  frame_number_ = value;
  // @@protoc_insertion_point(field_set:LHP_Frame.frame_number)
}

// required uint32 camera_id = 4;
inline bool LHP_Frame::has_camera_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LHP_Frame::set_has_camera_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LHP_Frame::clear_has_camera_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LHP_Frame::clear_camera_id() {
  camera_id_ = 0u;
  clear_has_camera_id();
}
inline ::google::protobuf::uint32 LHP_Frame::camera_id() const {
  // @@protoc_insertion_point(field_get:LHP_Frame.camera_id)
  return camera_id_;
}
inline void LHP_Frame::set_camera_id(::google::protobuf::uint32 value) {
  set_has_camera_id();
  camera_id_ = value;
  // @@protoc_insertion_point(field_set:LHP_Frame.camera_id)
}

// repeated .LHP_Blob blob = 5;
inline int LHP_Frame::blob_size() const {
  return blob_.size();
}
inline void LHP_Frame::clear_blob() {
  blob_.Clear();
}
inline const ::LHP_Blob& LHP_Frame::blob(int index) const {
  // @@protoc_insertion_point(field_get:LHP_Frame.blob)
  return blob_.Get(index);
}
inline ::LHP_Blob* LHP_Frame::mutable_blob(int index) {
  // @@protoc_insertion_point(field_mutable:LHP_Frame.blob)
  return blob_.Mutable(index);
}
inline ::LHP_Blob* LHP_Frame::add_blob() {
  // @@protoc_insertion_point(field_add:LHP_Frame.blob)
  return blob_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LHP_Blob >&
LHP_Frame::blob() const {
  // @@protoc_insertion_point(field_list:LHP_Frame.blob)
  return blob_;
}
inline ::google::protobuf::RepeatedPtrField< ::LHP_Blob >*
LHP_Frame::mutable_blob() {
  // @@protoc_insertion_point(field_mutable_list:LHP_Frame.blob)
  return &blob_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_5fblob_2eproto__INCLUDED
